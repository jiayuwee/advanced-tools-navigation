name: 🏥 Website Health Monitor

on:
  schedule:
    - cron: "0 0 * * 1" # 每周一早上8点运行
  workflow_dispatch:

env:
  WEBSITE_URL: 'https://ramusi.cn'
  TIMEOUT: 30

jobs:
  # 基本健康检查
  basic-health-check:
    runs-on: ubuntu-latest
    name: 🔍 Basic Health Check
    steps:
      - name: 🌐 Check website accessibility
        run: |
          echo "🔍 检查网站可访问性..."
          echo "目标URL: ${{ env.WEBSITE_URL }}"
          
          # 检查HTTP状态码
          response=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 10 --max-time ${{ env.TIMEOUT }} "${{ env.WEBSITE_URL }}")
          
          echo "响应状态码: $response"
          
          if [ "$response" = "200" ]; then
            echo "✅ 网站正常访问 (HTTP $response)"
          else
            echo "❌ 网站访问异常 (HTTP $response)"
            echo "尝试详细诊断..."
            curl -v --connect-timeout 10 --max-time ${{ env.TIMEOUT }} "${{ env.WEBSITE_URL }}" || true
            exit 1
          fi

      - name: 📄 Check page content
        run: |
          echo "🔍 检查页面内容..."
          
          # 获取页面内容
          content=$(curl -s --connect-timeout 10 --max-time ${{ env.TIMEOUT }} "${{ env.WEBSITE_URL }}")
          
          if [ -z "$content" ]; then
            echo "❌ 无法获取页面内容"
            exit 1
          fi
          
          # 检查基本 HTML 结构
          if echo "$content" | grep -q "<!doctype html>\|<!DOCTYPE html>"; then
            echo "✅ HTML结构正常"
          else
            echo "❌ HTML结构异常"
            echo "页面内容预览: $(echo "$content" | head -n 5)"
            exit 1
          fi
          
          # 检查网站标题或关键内容
          if echo "$content" | grep -qi "ramusi\|tools\|navigation"; then
            echo "✅ 网站关键内容正常"
          else
            echo "⚠️ 未找到预期的关键内容"
            echo "页面标题: $(echo "$content" | grep -o '<title[^>]*>[^<]*</title>' | head -1)"
          fi

      - name: ⚡ Performance check
        run: |
          echo "⚡ 检查网站性能..."
          
          # 测量响应时间
          start_time=$(date +%s%3N)
          http_code=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 10 --max-time ${{ env.TIMEOUT }} "${{ env.WEBSITE_URL }}")
          end_time=$(date +%s%3N)
          
          if [ "$http_code" != "200" ]; then
            echo "❌ 性能检查失败，网站不可访问 (HTTP $http_code)"
            exit 1
          fi
          
          duration=$((end_time - start_time))
          
          echo "响应时间: ${duration}ms"
          
          if [ $duration -lt 3000 ]; then
            echo "✅ 响应时间正常 (${duration}ms < 3000ms)"
          elif [ $duration -lt 5000 ]; then
            echo "⚠️ 响应时间较慢 (${duration}ms)"
          else
            echo "⚠️ 响应时间过慢 (${duration}ms)"
            # 不将性能问题作为失败，只是警告
          fi

  # 健康检查总结
  health-summary:
    runs-on: ubuntu-latest
    name: 📊 Health Check Summary
    needs: [basic-health-check]
    if: always()
    steps:
      - name: 📊 Generate summary
        run: |
          echo "📊 健康检查总结报告"
          echo "==========================================="
          echo "检查时间: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "目标网站: ${{ env.WEBSITE_URL }}"
          echo ""
          
          # 检查基本健康检查结果
          if [ "${{ needs.basic-health-check.result }}" = "success" ]; then
            echo "✅ 基本健康检查: 通过"
            echo "  - ✅ 网站可访问性: 正常"
            echo "  - ✅ 页面内容: 正常"
            echo "  - ✅ 性能检查: 正常"
          else
            echo "❌ 基本健康检查: 失败"
            echo "  详细信息请查看上方日志"
          fi
          
          echo ""
          echo "📈 监控建议:"
          echo "  - 定期检查网站可用性"
          echo "  - 监控响应时间变化"
          echo "  - 关注错误日志"
          echo "  - 备份重要数据"
          
          echo ""
          echo "🔗 相关链接:"
          echo "  - 网站: ${{ env.WEBSITE_URL }}"
          echo "  - GitHub: https://github.com/jiayuwee/advanced-tools-navigation"
          echo "  - 工作流: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: 🚨 Alert on failure
        if: needs.basic-health-check.result == 'failure'
        run: |
          echo "🚨 健康检查失败告警"
          echo "==========================================="
          echo "时间: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "网站: ${{ env.WEBSITE_URL }}"
          echo "状态: 异常"
          echo "工作流: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo ""
          echo "请立即检查网站状态并采取相应措施。"
