{"version":3,"file":"AdminToolsView-BjIzkYA-.js","sources":["../../src/utils/cacheManager.ts","../../src/utils/dataTransform.ts","../../src/services/toolsService.ts","../../src/views/AdminToolsView.vue"],"sourcesContent":["/**\r\n * 智能缓存管理器\r\n * 用于优化数据加载和减少不必要的 API 调用\r\n */\r\n\r\nimport { ref, reactive } from 'vue';\r\n\r\nexport interface CacheItem<T = any> {\r\n  data: T;\r\n  timestamp: number;\r\n  expiry: number;\r\n  version: string;\r\n  hits: number;\r\n  lastAccessed: number;\r\n}\r\n\r\nexport interface CacheOptions {\r\n  maxAge?: number; // 缓存最大生存时间（毫秒）\r\n  maxSize?: number; // 最大缓存项数量\r\n  version?: string; // 缓存版本\r\n  serialize?: boolean; // 是否序列化存储到 localStorage\r\n  prefix?: string; // localStorage 前缀\r\n}\r\n\r\nclass CacheManager {\r\n  private cache = reactive<Map<string, CacheItem>>(new Map());\r\n  private options: Required<CacheOptions>;\r\n  private readonly defaultOptions: Required<CacheOptions> = {\r\n    maxAge: 5 * 60 * 1000, // 5分钟\r\n    maxSize: 100,\r\n    version: '1.0.0',\r\n    serialize: false,\r\n    prefix: 'app_cache_',\r\n  };\r\n\r\n  constructor(options: CacheOptions = {}) {\r\n    this.options = { ...this.defaultOptions, ...options };\r\n    \r\n    if (this.options.serialize) {\r\n      this.loadFromStorage();\r\n    }\r\n\r\n    // 定期清理过期缓存\r\n    this.startCleanupTimer();\r\n  }\r\n\r\n  // 设置缓存\r\n  set<T>(key: string, data: T, customMaxAge?: number): void {\r\n    const now = Date.now();\r\n    const maxAge = customMaxAge || this.options.maxAge;\r\n\r\n    const item: CacheItem<T> = {\r\n      data,\r\n      timestamp: now,\r\n      expiry: now + maxAge,\r\n      version: this.options.version,\r\n      hits: 0,\r\n      lastAccessed: now,\r\n    };\r\n\r\n    // 检查缓存大小限制\r\n    if (this.cache.size >= this.options.maxSize) {\r\n      this.evictLeastRecentlyUsed();\r\n    }\r\n\r\n    this.cache.set(key, item);\r\n\r\n    if (this.options.serialize) {\r\n      this.saveToStorage(key, item);\r\n    }\r\n  }\r\n\r\n  // 获取缓存\r\n  get<T>(key: string): T | null {\r\n    const item = this.cache.get(key);\r\n    \r\n    if (!item) {\r\n      return null;\r\n    }\r\n\r\n    const now = Date.now();\r\n\r\n    // 检查是否过期\r\n    if (now > item.expiry) {\r\n      this.delete(key);\r\n      return null;\r\n    }\r\n\r\n    // 检查版本\r\n    if (item.version !== this.options.version) {\r\n      this.delete(key);\r\n      return null;\r\n    }\r\n\r\n    // 更新访问统计\r\n    item.hits++;\r\n    item.lastAccessed = now;\r\n\r\n    return item.data as T;\r\n  }\r\n\r\n  // 删除缓存\r\n  delete(key: string): boolean {\r\n    const deleted = this.cache.delete(key);\r\n    \r\n    if (deleted && this.options.serialize) {\r\n      this.removeFromStorage(key);\r\n    }\r\n\r\n    return deleted;\r\n  }\r\n\r\n  // 检查缓存是否存在且有效\r\n  has(key: string): boolean {\r\n    return this.get(key) !== null;\r\n  }\r\n\r\n  // 清空所有缓存\r\n  clear(): void {\r\n    this.cache.clear();\r\n    \r\n    if (this.options.serialize) {\r\n      this.clearStorage();\r\n    }\r\n  }\r\n\r\n  // 获取缓存统计信息\r\n  getStats() {\r\n    const now = Date.now();\r\n    let totalHits = 0;\r\n    let validCount = 0;\r\n    let expiredCount = 0;\r\n\r\n    for (const [, item] of this.cache) {\r\n      totalHits += item.hits;\r\n      \r\n      if (now > item.expiry) {\r\n        expiredCount++;\r\n      } else {\r\n        validCount++;\r\n      }\r\n    }\r\n\r\n    return {\r\n      totalItems: this.cache.size,\r\n      validItems: validCount,\r\n      expiredItems: expiredCount,\r\n      totalHits,\r\n      hitRate: totalHits > 0 ? (totalHits / this.cache.size) : 0,\r\n      memoryUsage: this.estimateMemoryUsage(),\r\n    };\r\n  }\r\n\r\n  // 刷新缓存版本（清空所有缓存）\r\n  refreshVersion(newVersion: string): void {\r\n    this.options.version = newVersion;\r\n    this.clear();\r\n  }\r\n\r\n  // 淘汰最少使用的缓存项\r\n  private evictLeastRecentlyUsed(): void {\r\n    let lruKey = '';\r\n    let lruTime = Date.now();\r\n\r\n    for (const [key, item] of this.cache) {\r\n      if (item.lastAccessed < lruTime) {\r\n        lruTime = item.lastAccessed;\r\n        lruKey = key;\r\n      }\r\n    }\r\n\r\n    if (lruKey) {\r\n      this.delete(lruKey);\r\n    }\r\n  }\r\n\r\n  // 清理过期缓存\r\n  private cleanup(): void {\r\n    const now = Date.now();\r\n    const keysToDelete: string[] = [];\r\n\r\n    for (const [key, item] of this.cache) {\r\n      if (now > item.expiry || item.version !== this.options.version) {\r\n        keysToDelete.push(key);\r\n      }\r\n    }\r\n\r\n    keysToDelete.forEach(key => this.delete(key));\r\n  }\r\n\r\n  // 启动清理定时器\r\n  private startCleanupTimer(): void {\r\n    setInterval(() => {\r\n      this.cleanup();\r\n    }, 60000); // 每分钟清理一次\r\n  }\r\n\r\n  // 估算内存使用量\r\n  private estimateMemoryUsage(): number {\r\n    let totalSize = 0;\r\n    \r\n    for (const [key, item] of this.cache) {\r\n      totalSize += key.length * 2; // Unicode 字符串\r\n      totalSize += JSON.stringify(item).length * 2;\r\n    }\r\n\r\n    return totalSize; // 字节数\r\n  }\r\n\r\n  // 保存到 localStorage\r\n  private saveToStorage(key: string, item: CacheItem): void {\r\n    try {\r\n      const storageKey = this.options.prefix + key;\r\n      localStorage.setItem(storageKey, JSON.stringify(item));\r\n    } catch (error) {\r\n      console.warn('保存缓存到 localStorage 失败:', error);\r\n    }\r\n  }\r\n\r\n  // 从 localStorage 加载\r\n  private loadFromStorage(): void {\r\n    try {\r\n      const prefix = this.options.prefix;\r\n      \r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const storageKey = localStorage.key(i);\r\n        \r\n        if (storageKey?.startsWith(prefix)) {\r\n          const key = storageKey.slice(prefix.length);\r\n          const itemStr = localStorage.getItem(storageKey);\r\n          \r\n          if (itemStr) {\r\n            const item: CacheItem = JSON.parse(itemStr);\r\n            \r\n            // 检查是否过期\r\n            if (Date.now() <= item.expiry && item.version === this.options.version) {\r\n              this.cache.set(key, item);\r\n            } else {\r\n              localStorage.removeItem(storageKey);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('从 localStorage 加载缓存失败:', error);\r\n    }\r\n  }\r\n\r\n  // 从 localStorage 删除\r\n  private removeFromStorage(key: string): void {\r\n    try {\r\n      const storageKey = this.options.prefix + key;\r\n      localStorage.removeItem(storageKey);\r\n    } catch (error) {\r\n      console.warn('从 localStorage 删除缓存失败:', error);\r\n    }\r\n  }\r\n\r\n  // 清空 localStorage 中的缓存\r\n  private clearStorage(): void {\r\n    try {\r\n      const prefix = this.options.prefix;\r\n      const keysToRemove: string[] = [];\r\n      \r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key?.startsWith(prefix)) {\r\n          keysToRemove.push(key);\r\n        }\r\n      }\r\n      \r\n      keysToRemove.forEach(key => localStorage.removeItem(key));\r\n    } catch (error) {\r\n      console.warn('清空 localStorage 缓存失败:', error);\r\n    }\r\n  }\r\n}\r\n\r\n// 创建默认缓存实例\r\nexport const defaultCache = new CacheManager({\r\n  maxAge: 5 * 60 * 1000, // 5分钟\r\n  maxSize: 100,\r\n  serialize: true,\r\n  prefix: 'advanced_tools_',\r\n});\r\n\r\n// 创建图片缓存实例\r\nexport const imageCache = new CacheManager({\r\n  maxAge: 30 * 60 * 1000, // 30分钟\r\n  maxSize: 50,\r\n  serialize: false, // 图片数据不适合序列化\r\n  prefix: 'img_cache_',\r\n});\r\n\r\n// 创建 API 数据缓存实例\r\nexport const apiCache = new CacheManager({\r\n  maxAge: 3 * 60 * 1000, // 3分钟\r\n  maxSize: 200,\r\n  serialize: true,\r\n  prefix: 'api_cache_',\r\n});\r\n\r\n// 缓存装饰器函数\r\nexport function withCache<T extends (...args: any[]) => Promise<any>>(\r\n  fn: T,\r\n  cacheKey: ((...args: Parameters<T>) => string) | string,\r\n  cacheInstance: CacheManager = defaultCache,\r\n  maxAge?: number\r\n): T {\r\n  return (async (...args: Parameters<T>) => {\r\n    const key = typeof cacheKey === 'function' ? cacheKey(...args) : cacheKey;\r\n    \r\n    // 尝试从缓存获取\r\n    const cachedResult = cacheInstance.get(key);\r\n    if (cachedResult !== null) {\r\n      return cachedResult;\r\n    }\r\n\r\n    // 执行原函数\r\n    const result = await fn(...args);\r\n    \r\n    // 缓存结果\r\n    cacheInstance.set(key, result, maxAge);\r\n    \r\n    return result;\r\n  }) as T;\r\n}\r\n\r\n// Vue Composition API\r\nexport function useCache(cacheInstance: CacheManager = defaultCache) {\r\n  const isLoading = ref(false);\r\n  const error = ref<string | null>(null);\r\n\r\n  const getCachedData = <T>(key: string): T | null => {\r\n    return cacheInstance.get<T>(key);\r\n  };\r\n\r\n  const setCachedData = <T>(key: string, data: T, maxAge?: number): void => {\r\n    cacheInstance.set(key, data, maxAge);\r\n  };\r\n\r\n  const loadWithCache = async <T>(\r\n    key: string,\r\n    fetcher: () => Promise<T>,\r\n    maxAge?: number,\r\n    forceRefresh = false\r\n  ): Promise<T> => {\r\n    try {\r\n      isLoading.value = true;\r\n      error.value = null;\r\n\r\n      // 如果不强制刷新，先检查缓存\r\n      if (!forceRefresh) {\r\n        const cached = getCachedData<T>(key);\r\n        if (cached !== null) {\r\n          return cached;\r\n        }\r\n      }\r\n\r\n      // 从 fetcher 获取数据\r\n      const data = await fetcher();\r\n      \r\n      // 缓存数据\r\n      setCachedData(key, data, maxAge);\r\n      \r\n      return data;\r\n    } catch (err) {\r\n      error.value = err instanceof Error ? err.message : '加载数据失败';\r\n      throw err;\r\n    } finally {\r\n      isLoading.value = false;\r\n    }\r\n  };\r\n\r\n  const clearCache = (key?: string): void => {\r\n    if (key) {\r\n      cacheInstance.delete(key);\r\n    } else {\r\n      cacheInstance.clear();\r\n    }\r\n  };\r\n\r\n  const getCacheStats = () => {\r\n    return cacheInstance.getStats();\r\n  };\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    getCachedData,\r\n    setCachedData,\r\n    loadWithCache,\r\n    clearCache,\r\n    getCacheStats,\r\n  };\r\n}","/**\r\n * 数据转换工具函数\r\n */\r\n\r\n/**\r\n * 提取分类 ID\r\n * 支持从不同格式的数据中提取分类 ID\r\n * @param data 包含分类信息的数据对象\r\n * @returns 分类 ID 或 null\r\n */\r\nexport function extractCategoryId(data: any): string | null {\r\n  // 优先使用嵌套的 category.id\r\n  if (data.category?.id) {\r\n    return data.category.id;\r\n  }\r\n\r\n  // 其次使用直接的 categoryId\r\n  if (data.categoryId) {\r\n    return data.categoryId;\r\n  }\r\n\r\n  // 最后使用 category_id（数据库字段名）\r\n  if (data.category_id) {\r\n    return data.category_id;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * 验证并提取分类 ID\r\n * 如果分类 ID 不存在则抛出错误\r\n * @param data 包含分类信息的数据对象\r\n * @param fieldName 字段名称，用于错误消息\r\n * @returns 分类 ID\r\n */\r\nexport function requireCategoryId(data: any, fieldName = \"Category\"): string {\r\n  const categoryId = extractCategoryId(data);\r\n\r\n  if (!categoryId) {\r\n    throw new Error(`${fieldName} is required`);\r\n  }\r\n\r\n  return categoryId;\r\n}\r\n\r\n/**\r\n * 提取用户 ID\r\n * 支持从不同格式的数据中提取用户 ID\r\n * @param data 包含用户信息的数据对象\r\n * @returns 用户 ID 或 null\r\n */\r\nexport function extractUserId(data: any): string | null {\r\n  // 优先使用嵌套的 user.id\r\n  if (data.user?.id) {\r\n    return data.user.id;\r\n  }\r\n\r\n  // 其次使用直接的 userId\r\n  if (data.userId) {\r\n    return data.userId;\r\n  }\r\n\r\n  // 最后使用 user_id（数据库字段名）\r\n  if (data.user_id) {\r\n    return data.user_id;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * 验证并提取用户 ID\r\n * 如果用户 ID 不存在则抛出错误\r\n * @param data 包含用户信息的数据对象\r\n * @param fieldName 字段名称，用于错误消息\r\n * @returns 用户 ID\r\n */\r\nexport function requireUserId(data: any, fieldName = \"User\"): string {\r\n  const userId = extractUserId(data);\r\n\r\n  if (!userId) {\r\n    throw new Error(`${fieldName} is required`);\r\n  }\r\n\r\n  return userId;\r\n}\r\n\r\n/**\r\n * 转换前端表单数据为数据库插入格式\r\n * @param formData 前端表单数据\r\n * @param fieldMappings 字段映射配置\r\n * @returns 数据库插入数据\r\n */\r\nexport function transformFormToDatabase(\r\n  formData: any,\r\n  fieldMappings: Record<string, string | ((value: any) => any)>,\r\n): Record<string, any> {\r\n  const result: Record<string, any> = {};\r\n\r\n  for (const [formField, dbField] of Object.entries(fieldMappings)) {\r\n    const value = formData[formField];\r\n\r\n    if (value !== undefined && value !== null) {\r\n      if (typeof dbField === \"function\") {\r\n        // 自定义转换函数\r\n        const transformedValue = dbField(value);\r\n        if (transformedValue !== undefined && transformedValue !== null) {\r\n          Object.assign(result, transformedValue);\r\n        }\r\n      } else {\r\n        // 直接字段映射\r\n        result[dbField] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * 转换数据库行数据为前端业务对象\r\n * @param dbRow 数据库行数据\r\n * @param fieldMappings 字段映射配置\r\n * @returns 前端业务对象\r\n */\r\nexport function transformDatabaseToModel(\r\n  dbRow: any,\r\n  fieldMappings: Record<string, string | ((value: any) => any)>,\r\n): Record<string, any> {\r\n  const result: Record<string, any> = {};\r\n\r\n  for (const [dbField, modelField] of Object.entries(fieldMappings)) {\r\n    const value = dbRow[dbField];\r\n\r\n    if (value !== undefined && value !== null) {\r\n      if (typeof modelField === \"function\") {\r\n        // 自定义转换函数\r\n        const transformedValue = modelField(value);\r\n        if (transformedValue !== undefined && transformedValue !== null) {\r\n          Object.assign(result, transformedValue);\r\n        }\r\n      } else {\r\n        // 直接字段映射\r\n        result[modelField] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * 验证必需字段\r\n * @param data 要验证的数据\r\n * @param requiredFields 必需字段列表\r\n * @param entityName 实体名称，用于错误消息\r\n */\r\nexport function validateRequiredFields(\r\n  data: any,\r\n  requiredFields: string[],\r\n  entityName = \"Entity\",\r\n): void {\r\n  const missingFields: string[] = [];\r\n\r\n  for (const field of requiredFields) {\r\n    if (!data[field]) {\r\n      missingFields.push(field);\r\n    }\r\n  }\r\n\r\n  if (missingFields.length > 0) {\r\n    throw new Error(\r\n      `${entityName} validation failed: missing required fields: ${missingFields.join(\", \")}`,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 清理数据对象，移除 undefined 和 null 值\r\n * @param data 要清理的数据对象\r\n * @returns 清理后的数据对象\r\n */\r\nexport function cleanData(data: Record<string, any>): Record<string, any> {\r\n  const result: Record<string, any> = {};\r\n\r\n  for (const [key, value] of Object.entries(data)) {\r\n    if (value !== undefined && value !== null) {\r\n      result[key] = value;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * 深度合并对象\r\n * @param target 目标对象\r\n * @param source 源对象\r\n * @returns 合并后的对象\r\n */\r\nexport function deepMerge(target: any, source: any): any {\r\n  const result = { ...target };\r\n\r\n  for (const key in source) {\r\n    if (source.hasOwnProperty(key)) {\r\n      if (\r\n        typeof source[key] === \"object\" &&\r\n        source[key] !== null &&\r\n        !Array.isArray(source[key])\r\n      ) {\r\n        result[key] = deepMerge(result[key] || {}, source[key]);\r\n      } else {\r\n        result[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * 格式化错误消息\r\n * @param error 错误对象\r\n * @param context 上下文信息\r\n * @returns 格式化的错误消息\r\n */\r\nexport function formatErrorMessage(error: any, context?: string): string {\r\n  let message = \"An error occurred\";\r\n\r\n  if (error?.message) {\r\n    message = error.message;\r\n  } else if (typeof error === \"string\") {\r\n    message = error;\r\n  }\r\n\r\n  if (context) {\r\n    message = `${context}: ${message}`;\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\n/**\r\n * 生成排序顺序\r\n * 为新项目生成合适的排序顺序值\r\n * @param existingItems 现有项目列表\r\n * @param sortField 排序字段名\r\n * @returns 新的排序顺序值\r\n */\r\nexport function generateSortOrder(\r\n  existingItems: any[],\r\n  sortField = \"sortOrder\",\r\n): number {\r\n  if (!existingItems || existingItems.length === 0) {\r\n    return 0;\r\n  }\r\n\r\n  const maxOrder = Math.max(\r\n    ...existingItems.map((item) => item[sortField] || 0),\r\n  );\r\n\r\n  return maxOrder + 1;\r\n}\r\n","import { supabase, TABLES, handleSupabaseError } from \"../lib/supabaseClient\";\r\nimport { ErrorHandler } from \"../utils/errorHandler\";\r\nimport { apiCache, withCache } from \"../utils/cacheManager\";\r\nimport type { Tool, SearchFilters, SearchResult } from \"../types\";\r\nimport {\r\n  requireCategoryId,\r\n  extractCategoryId,\r\n  validateRequiredFields,\r\n} from \"../utils/dataTransform\";\r\n\r\n// 状态常量\r\nconst TOOL_STATUS = {\r\n  ACTIVE: \"active\",\r\n  INACTIVE: \"inactive\",\r\n};\r\n\r\n// 工具输入类型（用于创建和更新），使用蛇形命名以匹配数据库字段\r\ninterface ToolInput {\r\n  name: string;\r\n  description: string;\r\n  url: string;\r\n  category_id: string;\r\n  icon?: string;\r\n  is_featured?: boolean;\r\n  status?: string;\r\n  meta_title?: string;\r\n  meta_description?: string;\r\n  sort_order?: number;\r\n  updated_at?: string; // 添加更新字段\r\n}\r\n\r\n/**\r\n * 工具服务类\r\n * 提供工具数据的CRUD操作和搜索功能\r\n */\r\nexport class ToolsService {\r\n  /**\r\n   * 获取所有工具（优化版本，带缓存）\r\n   * @param {SearchFilters} [filters] - 搜索过滤器\r\n   * @returns {Promise<SearchResult<Tool>>} 搜索结果\r\n   */\r\n  static async getTools(filters?: SearchFilters): Promise<SearchResult<Tool>> {\r\n    // 生成缓存键\r\n    const cacheKey = `tools_${JSON.stringify(filters || {})}`;\r\n    \r\n    // 使用缓存装饰器\r\n    return withCache(\r\n      this._getToolsFromAPI.bind(this),\r\n      () => cacheKey,\r\n      apiCache,\r\n      2 * 60 * 1000 // 2分钟缓存\r\n    )(filters);\r\n  }\r\n\r\n  // 内部方法，不使用缓存\r\n  private static async _getToolsFromAPI(filters?: SearchFilters): Promise<SearchResult<Tool>> {\r\n    try {\r\n      let query = supabase\r\n        .from(TABLES.TOOLS)\r\n        .select(\r\n          `\r\n          *,\r\n          category:categories(*)\r\n        `,\r\n        )\r\n        .eq(\"status\", TOOL_STATUS.ACTIVE);\r\n\r\n      // 应用搜索过滤器\r\n      if (filters?.query) {\r\n        query = query.or(\r\n          `name.ilike.%${filters.query}%,description.ilike.%${filters.query}%`,\r\n        );\r\n      }\r\n\r\n      if (filters?.category && filters.category !== \"all\") {\r\n        query = query.eq(\"category_id\", filters.category);\r\n      }\r\n\r\n      // 排序\r\n      const sortBy = filters?.sortBy || \"sort_order\";\r\n      const sortOrder = filters?.sortOrder || \"asc\";\r\n      query = query.order(sortBy, { ascending: sortOrder === \"asc\" });\r\n\r\n      // 分页\r\n      const page = filters?.page || 1;\r\n      const limit = filters?.limit || 20;\r\n      const offset = (page - 1) * limit;\r\n      query = query.range(offset, offset + limit - 1);\r\n\r\n      const { data, error, count } = await query;\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n\r\n      // 转换数据格式\r\n      const tools: Tool[] = (data || []).map(this.transformToolRow);\r\n\r\n      return {\r\n        items: tools,\r\n        total: count || 0,\r\n        page,\r\n        limit,\r\n        hasMore: (count || 0) > offset + limit,\r\n      };\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"ToolsService.getTools\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  // 获取单个工具（优化版本，带缓存）\r\n  static async getTool(id: string): Promise<Tool> {\r\n    const cacheKey = `tool_${id}`;\r\n    \r\n    return withCache(\r\n      this._getToolFromAPI.bind(this),\r\n      () => cacheKey,\r\n      apiCache,\r\n      5 * 60 * 1000 // 5分钟缓存\r\n    )(id);\r\n  }\r\n\r\n  // 内部方法\r\n  private static async _getToolFromAPI(id: string): Promise<Tool> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(TABLES.TOOLS)\r\n        .select(\r\n          `\r\n          *,\r\n          category:categories(*)\r\n        `,\r\n        )\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n\r\n      return this.transformToolRow(data);\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"ToolsService.getTool\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建新工具\r\n   * @param {ToolInput} toolData - 工具数据\r\n   * @returns {Promise<Tool>} 新创建的工具\r\n   */\r\n  static async createTool(toolData: ToolInput): Promise<Tool> {\r\n    try {\r\n      // 验证必需字段\r\n      validateRequiredFields(toolData, [\"name\", \"description\", \"url\"], \"Tool\");\r\n\r\n      // 验证并提取分类 ID\r\n      const categoryId = requireCategoryId(toolData);\r\n\r\n      const { data, error } = await supabase\r\n        .from(TABLES.TOOLS)\r\n        .insert({\r\n          name: toolData.name,\r\n          description: toolData.description,\r\n          url: toolData.url,\r\n          category_id: categoryId,\r\n          icon: toolData.icon,\r\n          is_featured: toolData.is_featured || false,\r\n          status: TOOL_STATUS.ACTIVE,\r\n          meta_title: toolData.meta_title,\r\n          meta_description: toolData.meta_description,\r\n          sort_order: toolData.sort_order || 0,\r\n        })\r\n        .select(\r\n          `\r\n          *,\r\n          category:categories(*)\r\n        `,\r\n        )\r\n        .single();\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n\r\n      const tool = this.transformToolRow(data);\r\n      \r\n      // 清理相关缓存\r\n      this.clearRelatedCache();\r\n      \r\n      return tool;\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"ToolsService.createTool\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新工具\r\n   * @param {string} id - 工具ID\r\n   * @param {Partial<ToolInput>} toolData - 要更新的工具数据\r\n   * @returns {Promise<Tool>} 更新后的工具\r\n   */\r\n  static async updateTool(\r\n    id: string,\r\n    toolData: Partial<ToolInput>,\r\n  ): Promise<Tool> {\r\n    try {\r\n      const updateData: Partial<ToolInput> = {};\r\n\r\n      if (toolData.name) updateData.name = toolData.name;\r\n      if (toolData.description) updateData.description = toolData.description;\r\n      if (toolData.url) updateData.url = toolData.url;\r\n\r\n      // 处理分类 ID - 支持多种格式\r\n      const categoryId = extractCategoryId(toolData);\r\n      if (categoryId) {\r\n        updateData.category_id = categoryId;\r\n      }\r\n\r\n      if (toolData.icon !== undefined) updateData.icon = toolData.icon;\r\n      if (toolData.is_featured !== undefined)\r\n        updateData.is_featured = toolData.is_featured;\r\n      if (toolData.status) updateData.status = toolData.status;\r\n      if (toolData.meta_title !== undefined)\r\n        updateData.meta_title = toolData.meta_title;\r\n      if (toolData.meta_description !== undefined)\r\n        updateData.meta_description = toolData.meta_description;\r\n      if (toolData.sort_order !== undefined)\r\n        updateData.sort_order = toolData.sort_order;\r\n\r\n      updateData.updated_at = new Date().toISOString();\r\n\r\n      const { data, error } = await supabase\r\n        .from(TABLES.TOOLS)\r\n        .update(updateData)\r\n        .eq(\"id\", id)\r\n        .select(\r\n          `\r\n          *,\r\n          category:categories(*)\r\n        `,\r\n        )\r\n        .single();\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n\r\n      const tool = this.transformToolRow(data);\r\n      \r\n      // 清理相关缓存\r\n      this.clearRelatedCache(id);\r\n      \r\n      return tool;\r\n    } catch (error) {\r\n      console.error(\"Error updating tool:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 删除工具\r\n  static async deleteTool(id: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.from(TABLES.TOOLS).delete().eq(\"id\", id);\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n      \r\n      // 清理相关缓存\r\n      this.clearRelatedCache(id);\r\n    } catch (error) {\r\n      console.error(\"Error deleting tool:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 增加点击次数（原子操作）\r\n  static async incrementClickCount(id: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.rpc(\"increment_click_count\", {\r\n        tool_id: id,\r\n      });\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n      \r\n      // 清理相关缓存\r\n      this.clearRelatedCache(id);\r\n    } catch (error) {\r\n      console.error(\"Error incrementing click count:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 更新收藏状态\r\n  static async updateFavoriteStatus(\r\n    id: string,\r\n    isFavorite: boolean,\r\n  ): Promise<void> {\r\n    try {\r\n      const { error } = await supabase\r\n        .from(TABLES.TOOLS)\r\n        .update({\r\n          is_favorite: isFavorite,\r\n          updated_at: new Date().toISOString(),\r\n        })\r\n        .eq(\"id\", id);\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n      \r\n      // 清理相关缓存\r\n      this.clearRelatedCache(id);\r\n    } catch (error) {\r\n      console.error(\"Error updating favorite status:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 获取热门工具（优化版本，带缓存）\r\n  static async getPopularTools(limit = 10): Promise<Tool[]> {\r\n    const cacheKey = `popular_tools_${limit}`;\r\n    \r\n    return withCache(\r\n      this._getPopularToolsFromAPI.bind(this),\r\n      () => cacheKey,\r\n      apiCache,\r\n      5 * 60 * 1000 // 5分钟缓存\r\n    )(limit);\r\n  }\r\n\r\n  // 内部方法\r\n  private static async _getPopularToolsFromAPI(limit = 10): Promise<Tool[]> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(TABLES.TOOLS)\r\n        .select(\r\n          `\r\n          *,\r\n          category:categories(*)\r\n        `,\r\n        )\r\n        .eq(\"status\", TOOL_STATUS.ACTIVE)\r\n        .order(\"click_count\", { ascending: false })\r\n        .limit(limit);\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n\r\n      return (data || []).map(this.transformToolRow);\r\n    } catch (error) {\r\n      console.error(\"Error fetching popular tools:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 获取推荐工具（优化版本，带缓存）\r\n  static async getFeaturedTools(limit = 6): Promise<Tool[]> {\r\n    const cacheKey = `featured_tools_${limit}`;\r\n    \r\n    return withCache(\r\n      this._getFeaturedToolsFromAPI.bind(this),\r\n      () => cacheKey,\r\n      apiCache,\r\n      10 * 60 * 1000 // 10分钟缓存（推荐工具变化较少）\r\n    )(limit);\r\n  }\r\n\r\n  // 内部方法\r\n  private static async _getFeaturedToolsFromAPI(limit = 6): Promise<Tool[]> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(TABLES.TOOLS)\r\n        .select(\r\n          `\r\n          *,\r\n          category:categories(*)\r\n        `,\r\n        )\r\n        .eq(\"status\", TOOL_STATUS.ACTIVE)\r\n        .eq(\"is_featured\", true)\r\n        .order(\"sort_order\", { ascending: true })\r\n        .limit(limit);\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n\r\n      return (data || []).map(this.transformToolRow);\r\n    } catch (error) {\r\n      console.error(\"Error fetching featured tools:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 搜索工具\r\n  static async searchTools(query: string, limit = 20): Promise<Tool[]> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(TABLES.TOOLS)\r\n        .select(\r\n          `\r\n          *,\r\n          category:categories(*)\r\n        `,\r\n        )\r\n        .eq(\"status\", TOOL_STATUS.ACTIVE)\r\n        .or(`name.ilike.%${query}%,description.ilike.%${query}%`)\r\n        .order(\"click_count\", { ascending: false })\r\n        .limit(limit);\r\n\r\n      if (error) {\r\n        throw new Error(handleSupabaseError(error));\r\n      }\r\n\r\n      return (data || []).map(this.transformToolRow);\r\n    } catch (error) {\r\n      console.error(\"Error searching tools:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // 在更新、创建、删除操作后清理相关缓存\r\n  private static clearRelatedCache(toolId?: string): void {\r\n    // 清理列表缓存\r\n    apiCache.clear(); // 简单粗暴的方式，实际中可以更精细化\r\n    \r\n    // 如果有具体的 toolId，清理该工具的缓存\r\n    if (toolId) {\r\n      apiCache.delete(`tool_${toolId}`);\r\n    }\r\n  }\r\n\r\n  // 转换数据库行为业务对象\r\n  private static transformToolRow(row: any): Tool {\r\n    return {\r\n      id: row.id,\r\n      name: row.name,\r\n      description: row.description,\r\n      url: row.url,\r\n      icon: row.icon,\r\n      category_id: row.category_id,\r\n      tags: [], // TODO: 实现标签关联\r\n      is_favorite: row.is_favorite,\r\n      click_count: row.click_count,\r\n      is_featured: row.is_featured,\r\n      status: row.status,\r\n      created_at: row.created_at,\r\n      updated_at: row.updated_at,\r\n      created_by: row.created_by,\r\n      meta_title: row.meta_title,\r\n      meta_description: row.meta_description,\r\n      sort_order: row.sort_order,\r\n    };\r\n  }\r\n\r\n  // 转换分类数据库行为业务对象 (被CategoriesService调用)\r\n  // 已移除未使用的 transformCategoryRow\r\n}\r\n","<template>\r\n  <div class=\"admin-tools-view\">\r\n    <div class=\"admin-header\">\r\n      <h1>工具管理</h1>\r\n      <p>添加、编辑和管理工具数据</p>\r\n    </div>\r\n\r\n    <div class=\"admin-actions\">\r\n      <button class=\"action-button primary\" @click=\"showAddModal = true\">\r\n        <PlusIcon class=\"icon\" />\r\n        添加新工具\r\n      </button>\r\n\r\n      <button class=\"action-button secondary\" @click=\"refreshTools\">\r\n        <RefreshCwIcon class=\"icon\" />\r\n        刷新列表\r\n      </button>\r\n\r\n      <div class=\"search-tools\">\r\n        <input\r\n          v-model=\"searchQuery\"\r\n          type=\"text\"\r\n          placeholder=\"搜索工具...\"\r\n          class=\"search-input\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"message\" class=\"message\" :class=\"messageType\">\r\n      {{ message }}\r\n    </div>\r\n\r\n    <!-- 工具统计 -->\r\n    <div class=\"tools-summary\">\r\n      <div class=\"stats-grid\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-number\">{{ filteredTools.length }}</div>\r\n          <div class=\"stat-label\">总工具数</div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-number\">{{ featuredCount }}</div>\r\n          <div class=\"stat-label\">推荐工具</div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-number\">{{ categoriesStore.categories.length }}</div>\r\n          <div class=\"stat-label\">分类数</div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-number\">{{ activeToolsCount }}</div>\r\n          <div class=\"stat-label\">活跃工具</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 工具列表 -->\r\n    <div class=\"tools-management\">\r\n      <div class=\"tools-header\">\r\n        <h2>工具列表</h2>\r\n        <div class=\"filter-controls\">\r\n          <select v-model=\"selectedCategory\" class=\"category-filter\">\r\n            <option value=\"\">全部分类</option>\r\n            <option\r\n              v-for=\"category in categoriesStore.categories\"\r\n              :key=\"category.id\"\r\n              :value=\"category.id\"\r\n            >\r\n              {{ category.name }}\r\n            </option>\r\n          </select>\r\n          <select v-model=\"statusFilter\" class=\"status-filter\">\r\n            <option value=\"\">全部状态</option>\r\n            <option value=\"active\">活跃</option>\r\n            <option value=\"inactive\">停用</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tools-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-icon\">图标</div>\r\n          <div class=\"col-name\">名称</div>\r\n          <div class=\"col-category\">分类</div>\r\n          <div class=\"col-status\">状态</div>\r\n          <div class=\"col-clicks\">点击数</div>\r\n          <div class=\"col-actions\">操作</div>\r\n        </div>\r\n\r\n        <div v-for=\"tool in paginatedTools\" :key=\"tool.id\" class=\"table-row\">\r\n          <div class=\"col-icon\">\r\n            <span class=\"tool-icon\">{{ tool.icon }}</span>\r\n          </div>\r\n          <div class=\"col-name\">\r\n            <div class=\"tool-name\">{{ tool.name }}</div>\r\n            <div class=\"tool-description\">{{ tool.description }}</div>\r\n          </div>\r\n          <div class=\"col-category\">\r\n            <span class=\"category-badge\">{{\r\n              getCategoryName(tool.category_id) || \"未分类\"\r\n            }}</span>\r\n          </div>\r\n          <div class=\"col-status\">\r\n            <span\r\n              class=\"status-badge\"\r\n              :class=\"tool.status === 'active' ? 'active' : 'inactive'\"\r\n            >\r\n              {{ tool.status === \"active\" ? \"活跃\" : \"停用\" }}\r\n            </span>\r\n          </div>\r\n          <div class=\"col-clicks\">{{ tool.click_count || 0 }}</div>\r\n          <div class=\"col-actions\">\r\n            <button\r\n              class=\"action-btn edit\"\r\n              title=\"编辑\"\r\n              @click=\"editTool(tool)\"\r\n            >\r\n              <Edit class=\"icon\" />\r\n            </button>\r\n            <button\r\n              class=\"action-btn delete\"\r\n              title=\"删除\"\r\n              @click=\"deleteTool(tool)\"\r\n            >\r\n              <TrashIcon class=\"icon\" />\r\n            </button>\r\n            <button\r\n              class=\"action-btn toggle\"\r\n              :title=\"tool.status === 'active' ? '停用' : '启用'\"\r\n              @click=\"toggleToolStatus(tool)\"\r\n            >\r\n              <EyeIcon v-if=\"tool.status === 'active'\" class=\"icon\" />\r\n              <EyeOffIcon v-else class=\"icon\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 分页 -->\r\n      <div v-if=\"totalPages > 1\" class=\"pagination\">\r\n        <button\r\n          :disabled=\"currentPage === 1\"\r\n          class=\"page-btn\"\r\n          @click=\"currentPage--\"\r\n        >\r\n          上一页\r\n        </button>\r\n        <span class=\"page-info\">\r\n          第 {{ currentPage }} 页，共 {{ totalPages }} 页\r\n        </span>\r\n        <button\r\n          :disabled=\"currentPage === totalPages\"\r\n          class=\"page-btn\"\r\n          @click=\"currentPage++\"\r\n        >\r\n          下一页\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 添加/编辑工具模态框 -->\r\n    <div\r\n      v-if=\"showAddModal || showEditModal\"\r\n      class=\"modal-overlay\"\r\n      @click=\"closeModals\"\r\n    >\r\n      <div class=\"modal-content\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>{{ showAddModal ? \"添加新工具\" : \"编辑工具\" }}</h3>\r\n          <button class=\"close-btn\" @click=\"closeModals\">\r\n            <XIcon class=\"icon\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form class=\"tool-form\" @submit.prevent=\"saveTool\">\r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label>工具名称 *</label>\r\n              <input\r\n                v-model=\"toolForm.name\"\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"输入工具名称\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>工具图标</label>\r\n              <input v-model=\"toolForm.icon\" type=\"text\" placeholder=\"🔧\" />\r\n            </div>\r\n\r\n            <div class=\"form-group full-width\">\r\n              <label>工具描述 *</label>\r\n              <textarea\r\n                v-model=\"toolForm.description\"\r\n                required\r\n                placeholder=\"描述工具的功能和用途\"\r\n                rows=\"3\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>工具链接 *</label>\r\n              <input\r\n                v-model=\"toolForm.url\"\r\n                type=\"url\"\r\n                required\r\n                placeholder=\"https://example.com\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>分类 *</label>\r\n              <select v-model=\"toolForm.category_id\" required>\r\n                <option value=\"\">选择分类</option>\r\n                <option\r\n                  v-for=\"category in categoriesStore.categories\"\r\n                  :key=\"category.id\"\r\n                  :value=\"category.id\"\r\n                >\r\n                  {{ category.name }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>状态</label>\r\n              <select v-model=\"toolForm.status\">\r\n                <option value=\"active\">活跃</option>\r\n                <option value=\"inactive\">停用</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>\r\n                <input v-model=\"toolForm.is_featured\" type=\"checkbox\" />\r\n                推荐工具\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-actions\">\r\n            <button type=\"button\" class=\"cancel-btn\" @click=\"closeModals\">\r\n              取消\r\n            </button>\r\n            <button type=\"submit\" :disabled=\"saving\" class=\"save-btn\">\r\n              {{ saving ? \"保存中...\" : \"保存\" }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useToolsStore } from \"../stores/tools\";\r\nimport { useCategoriesStore } from \"../stores/categories\";\r\nimport { ToolsService } from \"../services/toolsService\";\r\nimport {\r\n  PlusIcon,\r\n  RefreshCwIcon,\r\n  Edit,\r\n  TrashIcon,\r\n  EyeIcon,\r\n  EyeOffIcon,\r\n  XIcon,\r\n} from \"lucide-vue-next\";\r\nimport type { Tool } from \"../types\";\r\n\r\nconst toolsStore = useToolsStore();\r\nconst categoriesStore = useCategoriesStore();\r\n\r\n// 响应式数据\r\nconst loading = ref(false);\r\nconst saving = ref(false);\r\nconst message = ref(\"\");\r\nconst messageType = ref<\"success\" | \"error\">(\"success\");\r\nconst searchQuery = ref(\"\");\r\nconst selectedCategory = ref(\"\");\r\nconst statusFilter = ref(\"\");\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(10);\r\n\r\n// 模态框状态\r\nconst showAddModal = ref(false);\r\nconst showEditModal = ref(false);\r\nconst editingTool = ref<Tool | null>(null);\r\n\r\n// 工具表单\r\nconst toolForm = ref({\r\n  name: \"\",\r\n  description: \"\",\r\n  url: \"\",\r\n  icon: \"🔧\",\r\n  category_id: \"\",\r\n  status: \"active\" as \"active\" | \"inactive\" | \"pending\",\r\n  is_featured: false,\r\n});\r\n\r\n// 计算属性\r\nconst filteredTools = computed(() => {\r\n  let tools = toolsStore.tools;\r\n\r\n  // 搜索过滤\r\n  if (searchQuery.value) {\r\n    const query = searchQuery.value.toLowerCase();\r\n    tools = tools.filter(\r\n      (tool) =>\r\n        tool.name.toLowerCase().includes(query) ||\r\n        tool.description.toLowerCase().includes(query),\r\n    );\r\n  }\r\n\r\n  // 分类过滤\r\n  if (selectedCategory.value) {\r\n    tools = tools.filter((tool) => tool.category_id === selectedCategory.value);\r\n  }\r\n\r\n  // 状态过滤\r\n  if (statusFilter.value) {\r\n    tools = tools.filter((tool) => tool.status === statusFilter.value);\r\n  }\r\n\r\n  return tools;\r\n});\r\n\r\nconst featuredCount = computed(\r\n  () => toolsStore.tools.filter((tool) => tool.is_featured).length,\r\n);\r\n\r\nconst activeToolsCount = computed(\r\n  () => toolsStore.tools.filter((tool) => tool.status === \"active\").length,\r\n);\r\n\r\nconst totalPages = computed(() =>\r\n  Math.ceil(filteredTools.value.length / pageSize.value),\r\n);\r\n\r\nconst paginatedTools = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return filteredTools.value.slice(start, end);\r\n});\r\n\r\n// 方法\r\nconst refreshTools = async () => {\r\n  try {\r\n    loading.value = true;\r\n    await toolsStore.initialize();\r\n    await categoriesStore.initialize();\r\n    message.value = \"工具列表已刷新\";\r\n    messageType.value = \"success\";\r\n  } catch (error) {\r\n    message.value = \"刷新失败\";\r\n    messageType.value = \"error\";\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst resetForm = () => {\r\n  toolForm.value = {\r\n    name: \"\",\r\n    description: \"\",\r\n    url: \"\",\r\n    icon: \"🔧\",\r\n    category_id: \"\",\r\n    status: \"active\",\r\n    is_featured: false,\r\n  };\r\n};\r\n\r\nconst closeModals = () => {\r\n  showAddModal.value = false;\r\n  showEditModal.value = false;\r\n  editingTool.value = null;\r\n  resetForm();\r\n};\r\n\r\nconst editTool = (tool: Tool) => {\r\n  editingTool.value = tool;\r\n  toolForm.value = {\r\n    name: tool.name,\r\n    description: tool.description,\r\n    url: tool.url,\r\n    icon: tool.icon,\r\n    category_id: tool.category_id,\r\n    status: tool.status,\r\n    is_featured: tool.is_featured,\r\n  };\r\n  showEditModal.value = true;\r\n};\r\n\r\nconst saveTool = async () => {\r\n  try {\r\n    saving.value = true;\r\n    message.value = \"\";\r\n\r\n    if (showEditModal.value && editingTool.value) {\r\n      // 更新工具\r\n      await ToolsService.updateTool(editingTool.value.id, {\r\n        name: toolForm.value.name,\r\n        description: toolForm.value.description,\r\n        url: toolForm.value.url,\r\n        icon: toolForm.value.icon,\r\n        category_id: toolForm.value.category_id,\r\n        status: toolForm.value.status,\r\n        is_featured: toolForm.value.is_featured,\r\n      });\r\n      message.value = \"工具更新成功！\";\r\n    } else {\r\n      // 创建新工具\r\n      await ToolsService.createTool({\r\n        name: toolForm.value.name,\r\n        description: toolForm.value.description,\r\n        url: toolForm.value.url,\r\n        icon: toolForm.value.icon,\r\n        category_id: toolForm.value.category_id,\r\n        status: toolForm.value.status,\r\n        is_featured: toolForm.value.is_featured,\r\n\r\n        sort_order: 0,\r\n      });\r\n      message.value = \"工具创建成功！\";\r\n    }\r\n\r\n    messageType.value = \"success\";\r\n    closeModals();\r\n    await refreshTools();\r\n  } catch (error) {\r\n    console.error(\"保存工具失败:\", error);\r\n    message.value =\r\n      \"保存工具失败: \" + (error instanceof Error ? error.message : \"未知错误\");\r\n    messageType.value = \"error\";\r\n  } finally {\r\n    saving.value = false;\r\n  }\r\n};\r\n\r\nconst deleteTool = async (tool: Tool) => {\r\n  if (!confirm(`确定要删除工具 \"${tool.name}\" 吗？此操作不可恢复。`)) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await ToolsService.deleteTool(tool.id);\r\n    message.value = \"工具删除成功！\";\r\n    messageType.value = \"success\";\r\n    await refreshTools();\r\n  } catch (error) {\r\n    console.error(\"删除工具失败:\", error);\r\n    message.value =\r\n      \"删除工具失败: \" + (error instanceof Error ? error.message : \"未知错误\");\r\n    messageType.value = \"error\";\r\n  }\r\n};\r\n\r\nconst toggleToolStatus = async (tool: Tool) => {\r\n  try {\r\n    const newStatus = tool.status === \"active\" ? \"inactive\" : \"active\";\r\n    await ToolsService.updateTool(tool.id, { status: newStatus });\r\n    message.value = `工具已${newStatus === \"active\" ? \"启用\" : \"停用\"}！`;\r\n    messageType.value = \"success\";\r\n    await refreshTools();\r\n  } catch (error) {\r\n    console.error(\"切换工具状态失败:\", error);\r\n    message.value = \"操作失败\";\r\n    messageType.value = \"error\";\r\n  }\r\n};\r\n\r\nonMounted(async () => {\r\n  await toolsStore.initialize();\r\n  await categoriesStore.initialize();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.admin-tools-view {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #f8fafc;\r\n  min-height: 100vh;\r\n}\r\n\r\n.admin-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.admin-header h1 {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  color: #1a202c;\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n.admin-header p {\r\n  color: #64748b;\r\n  font-size: 16px;\r\n  margin: 0;\r\n}\r\n\r\n.admin-actions {\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.action-button {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 12px 20px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.action-button .icon {\r\n  width: 16px;\r\n  height: 16px;\r\n}\r\n\r\n.action-button.primary {\r\n  background: #3b82f6;\r\n  color: white;\r\n}\r\n\r\n.action-button.primary:hover:not(:disabled) {\r\n  background: #2563eb;\r\n}\r\n\r\n.action-button.secondary {\r\n  background: #64748b;\r\n  color: white;\r\n}\r\n\r\n.action-button.secondary:hover {\r\n  background: #475569;\r\n}\r\n\r\n.action-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.search-tools {\r\n  margin-left: auto;\r\n}\r\n\r\n.search-input {\r\n  padding: 10px 15px;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  width: 250px;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  border-color: #3b82f6;\r\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n}\r\n\r\n.message {\r\n  padding: 15px 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 25px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.message.success {\r\n  background: #dcfce7;\r\n  color: #166534;\r\n  border: 1px solid #bbf7d0;\r\n}\r\n\r\n.message.error {\r\n  background: #fef2f2;\r\n  color: #dc2626;\r\n  border: 1px solid #fecaca;\r\n}\r\n\r\n.tools-summary {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  padding: 25px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.stat-number {\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  color: #3b82f6;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.stat-label {\r\n  color: #64748b;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 工具管理 */\r\n.tools-management {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 25px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.tools-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.tools-header h2 {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n  margin: 0;\r\n}\r\n\r\n.filter-controls {\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.category-filter,\r\n.status-filter {\r\n  padding: 8px 12px;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  background: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.category-filter:focus,\r\n.status-filter:focus {\r\n  outline: none;\r\n  border-color: #3b82f6;\r\n}\r\n\r\n/* 工具表格 */\r\n.tools-table {\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.table-header {\r\n  display: grid;\r\n  grid-template-columns: 60px 1fr 120px 80px 80px 120px;\r\n  background: #f8fafc;\r\n  padding: 15px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n  font-size: 14px;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.table-row {\r\n  display: grid;\r\n  grid-template-columns: 60px 1fr 120px 80px 80px 120px;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #f1f5f9;\r\n  align-items: center;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.table-row:hover {\r\n  background: #f8fafc;\r\n}\r\n\r\n.table-row:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.col-icon .tool-icon {\r\n  font-size: 24px;\r\n  display: block;\r\n  text-align: center;\r\n}\r\n\r\n.col-name .tool-name {\r\n  font-weight: 500;\r\n  color: #1a202c;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.col-name .tool-description {\r\n  font-size: 12px;\r\n  color: #64748b;\r\n  line-height: 1.4;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n\r\n.category-badge {\r\n  background: #e0f2fe;\r\n  color: #0277bd;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.status-badge {\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.status-badge.active {\r\n  background: #dcfce7;\r\n  color: #166534;\r\n}\r\n\r\n.status-badge.inactive {\r\n  background: #fef2f2;\r\n  color: #dc2626;\r\n}\r\n\r\n.col-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.action-btn {\r\n  padding: 6px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.action-btn .icon {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n\r\n.action-btn.edit {\r\n  background: #dbeafe;\r\n  color: #1d4ed8;\r\n}\r\n\r\n.action-btn.edit:hover {\r\n  background: #bfdbfe;\r\n}\r\n\r\n.action-btn.delete {\r\n  background: #fef2f2;\r\n  color: #dc2626;\r\n}\r\n\r\n.action-btn.delete:hover {\r\n  background: #fecaca;\r\n}\r\n\r\n.action-btn.toggle {\r\n  background: #f3f4f6;\r\n  color: #6b7280;\r\n}\r\n\r\n.action-btn.toggle:hover {\r\n  background: #e5e7eb;\r\n}\r\n\r\n/* 分页 */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 25px;\r\n}\r\n\r\n.page-btn {\r\n  padding: 8px 16px;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 6px;\r\n  background: white;\r\n  color: #374151;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.page-btn:hover:not(:disabled) {\r\n  background: #f8fafc;\r\n  border-color: #cbd5e1;\r\n}\r\n\r\n.page-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.page-info {\r\n  color: #64748b;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 模态框 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: 20px;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 25px 25px 0 25px;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.modal-header h3 {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n  margin: 0;\r\n}\r\n\r\n.close-btn {\r\n  padding: 8px;\r\n  border: none;\r\n  background: #f3f4f6;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.close-btn:hover {\r\n  background: #e5e7eb;\r\n}\r\n\r\n.close-btn .icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  color: #6b7280;\r\n}\r\n\r\n.tool-form {\r\n  padding: 0 25px 25px 25px;\r\n}\r\n\r\n.form-grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-group.full-width {\r\n  grid-column: 1 / -1;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: 500;\r\n  color: #374151;\r\n  margin-bottom: 8px;\r\n  font-size: 14px;\r\n}\r\n\r\n.form-group input,\r\n.form-group textarea,\r\n.form-group select {\r\n  padding: 12px;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.form-group input:focus,\r\n.form-group textarea:focus,\r\n.form-group select:focus {\r\n  outline: none;\r\n  border-color: #3b82f6;\r\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n}\r\n\r\n.form-group input[type=\"checkbox\"] {\r\n  width: auto;\r\n  margin-right: 8px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 15px;\r\n  margin-top: 30px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e2e8f0;\r\n}\r\n\r\n.cancel-btn,\r\n.save-btn {\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.cancel-btn {\r\n  background: #f8fafc;\r\n  color: #64748b;\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background: #f1f5f9;\r\n  border-color: #cbd5e1;\r\n}\r\n\r\n.save-btn {\r\n  background: #3b82f6;\r\n  color: white;\r\n}\r\n\r\n.save-btn:hover:not(:disabled) {\r\n  background: #2563eb;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background: #94a3b8;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .admin-tools-view {\r\n    padding: 15px;\r\n  }\r\n\r\n  .admin-actions {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n\r\n  .search-tools {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .search-input {\r\n    width: 100%;\r\n  }\r\n\r\n  .filter-controls {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  .table-header,\r\n  .table-row {\r\n    grid-template-columns: 1fr;\r\n    gap: 10px;\r\n  }\r\n\r\n  .table-header {\r\n    display: none;\r\n  }\r\n\r\n  .table-row {\r\n    display: block;\r\n    padding: 20px;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .col-name .tool-name {\r\n    font-size: 16px;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .col-actions {\r\n    margin-top: 15px;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .form-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .modal-content {\r\n    margin: 20px;\r\n    max-height: calc(100vh - 40px);\r\n  }\r\n}\r\n</style>\r\n"],"names":["CacheManager","constructor","options","__publicField","this","reactive","Map","maxAge","maxSize","version","serialize","prefix","defaultOptions","loadFromStorage","startCleanupTimer","set","key","data","customMaxAge","now","Date","item","timestamp","expiry","hits","lastAccessed","cache","size","evictLeastRecentlyUsed","saveToStorage","get","delete","deleted","removeFromStorage","has","clear","clearStorage","getStats","totalHits","validCount","expiredCount","totalItems","validItems","expiredItems","hitRate","memoryUsage","estimateMemoryUsage","refreshVersion","newVersion","lruKey","lruTime","cleanup","keysToDelete","push","forEach","setInterval","totalSize","length","JSON","stringify","storageKey","localStorage","setItem","error","console","warn","i","startsWith","slice","itemStr","getItem","parse","removeItem","keysToRemove","defaultCache","apiCache","withCache","fn","cacheKey","cacheInstance","async","args","cachedResult","result","extractCategoryId","_a","category","id","categoryId","category_id","TOOL_STATUS","ToolsService","getTools","filters","_getToolsFromAPI","bind","query","supabase","from","TABLES","TOOLS","select","eq","or","sortBy","sortOrder","order","ascending","page","limit","offset","range","count","Error","handleSupabaseError","items","map","transformToolRow","total","hasMore","appError","ErrorHandler","handleApiError","logError","getTool","_getToolFromAPI","single","createTool","toolData","validateRequiredFields","requiredFields","entityName","missingFields","field","join","requireCategoryId","fieldName","insert","name","description","url","icon","is_featured","status","meta_title","meta_description","sort_order","tool","clearRelatedCache","updateTool","updateData","updated_at","toISOString","update","deleteTool","incrementClickCount","rpc","tool_id","updateFavoriteStatus","isFavorite","is_favorite","getPopularTools","_getPopularToolsFromAPI","getFeaturedTools","_getFeaturedToolsFromAPI","searchTools","toolId","row","tags","click_count","created_at","created_by","toolsStore","useToolsStore","categoriesStore","useCategoriesStore","loading","ref","saving","message","messageType","searchQuery","selectedCategory","statusFilter","currentPage","pageSize","showAddModal","showEditModal","editingTool","toolForm","filteredTools","computed","tools","value","toLowerCase","filter","includes","featuredCount","activeToolsCount","totalPages","Math","ceil","paginatedTools","start","end","refreshTools","initialize","closeModals","saveTool","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","class","_hoisted_2","onClick","_createVNode","_unref","PlusIcon","RefreshCwIcon","_hoisted_3","$event","type","placeholder","_normalizeClass","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","_cache","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","categories","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_Fragment","_renderList","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","getCategoryName","_hoisted_26","_hoisted_27","_hoisted_28","title","editTool","Edit","confirm","TrashIcon","newStatus","toggleToolStatus","_createBlock","EyeIcon","EyeOffIcon","_hoisted_32","disabled","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","XIcon","onSubmit","_hoisted_37","_hoisted_38","required","_vModelText","_hoisted_39","_hoisted_40","rows","_hoisted_41","_hoisted_42","_hoisted_43","_vModelSelect","_hoisted_44","_hoisted_45","_vModelCheckbox","_hoisted_46","_hoisted_47"],"mappings":"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"}