{"version":3,"file":"paymentService-BZKge-lz.js","sources":["../../src/services/paymentService.ts"],"sourcesContent":["import type { PaymentData } from \"@/services/orderService\";\r\n\r\n// 支付网关配置\r\nconst PAYMENT_CONFIG = {\r\n  // Stripe配置\r\n  stripe: {\r\n    publicKey: import.meta.env.VITE_STRIPE_PUBLIC_KEY || \"\",\r\n    secretKey: import.meta.env.VITE_STRIPE_SECRET_KEY || \"\",\r\n  },\r\n  // 支付宝配置\r\n  alipay: {\r\n    appId: import.meta.env.VITE_ALIPAY_APP_ID || \"\",\r\n    privateKey: import.meta.env.VITE_ALIPAY_PRIVATE_KEY || \"\",\r\n    alipayPublicKey: import.meta.env.VITE_ALIPAY_PUBLIC_KEY || \"\",\r\n  },\r\n  // 微信支付配置\r\n  wechat: {\r\n    appId: import.meta.env.VITE_WECHAT_APP_ID || \"\",\r\n    mchId: import.meta.env.VITE_WECHAT_MCH_ID || \"\",\r\n    apiKey: import.meta.env.VITE_WECHAT_API_KEY || \"\",\r\n  },\r\n};\r\n\r\n// 支付结果类型\r\nexport interface PaymentResult {\r\n  success: boolean;\r\n  paymentId?: string;\r\n  orderId: string;\r\n  amount: number;\r\n  currency: string;\r\n  method: string;\r\n  message?: string;\r\n  redirectUrl?: string;\r\n}\r\n\r\nexport class PaymentService {\r\n  // 处理Stripe支付\r\n  static async processStripePayment(paymentData: PaymentData): Promise<PaymentResult> {\r\n    try {\r\n      // 检查Stripe配置\r\n      if (!PAYMENT_CONFIG.stripe.publicKey || !PAYMENT_CONFIG.stripe.secretKey) {\r\n        throw new Error(\"Stripe支付配置缺失\");\r\n      }\r\n\r\n      // 在实际应用中，这里会调用Stripe API\r\n      // 由于这是一个演示项目，我们模拟支付处理\r\n      console.log(\"处理Stripe支付:\", paymentData);\r\n      \r\n      // 模拟API调用延迟\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      // 模拟支付成功\r\n      return {\r\n        success: true,\r\n        paymentId: `stripe_${Date.now()}`,\r\n        orderId: paymentData.order_id,\r\n        amount: paymentData.amount,\r\n        currency: \"CNY\",\r\n        method: \"stripe\",\r\n        message: \"支付成功\"\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Stripe支付处理失败:\", error);\r\n      return {\r\n        success: false,\r\n        orderId: paymentData.order_id,\r\n        amount: paymentData.amount,\r\n        currency: \"CNY\",\r\n        method: \"stripe\",\r\n        message: error instanceof Error ? error.message : \"支付处理失败\"\r\n      };\r\n    }\r\n  }\r\n\r\n  // 处理支付宝支付\r\n  static async processAlipayPayment(paymentData: PaymentData): Promise<PaymentResult> {\r\n    try {\r\n      // 检查支付宝配置\r\n      if (!PAYMENT_CONFIG.alipay.appId || !PAYMENT_CONFIG.alipay.privateKey) {\r\n        throw new Error(\"支付宝支付配置缺失\");\r\n      }\r\n\r\n      // 在实际应用中，这里会调用支付宝API\r\n      // 由于这是一个演示项目，我们模拟支付处理\r\n      console.log(\"处理支付宝支付:\", paymentData);\r\n      \r\n      // 模拟API调用延迟\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      // 模拟支付成功\r\n      return {\r\n        success: true,\r\n        paymentId: `alipay_${Date.now()}`,\r\n        orderId: paymentData.order_id,\r\n        amount: paymentData.amount,\r\n        currency: \"CNY\",\r\n        method: \"alipay\",\r\n        message: \"支付成功\"\r\n      };\r\n    } catch (error) {\r\n      console.error(\"支付宝支付处理失败:\", error);\r\n      return {\r\n        success: false,\r\n        orderId: paymentData.order_id,\r\n        amount: paymentData.amount,\r\n        currency: \"CNY\",\r\n        method: \"alipay\",\r\n        message: error instanceof Error ? error.message : \"支付处理失败\"\r\n      };\r\n    }\r\n  }\r\n\r\n  // 处理微信支付\r\n  static async processWechatPayment(paymentData: PaymentData): Promise<PaymentResult> {\r\n    try {\r\n      // 检查微信支付配置\r\n      if (!PAYMENT_CONFIG.wechat.appId || !PAYMENT_CONFIG.wechat.mchId || !PAYMENT_CONFIG.wechat.apiKey) {\r\n        throw new Error(\"微信支付配置缺失\");\r\n      }\r\n\r\n      // 在实际应用中，这里会调用微信支付API\r\n      // 由于这是一个演示项目，我们模拟支付处理\r\n      console.log(\"处理微信支付:\", paymentData);\r\n      \r\n      // 模拟API调用延迟\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      // 模拟支付成功\r\n      return {\r\n        success: true,\r\n        paymentId: `wechat_${Date.now()}`,\r\n        orderId: paymentData.order_id,\r\n        amount: paymentData.amount,\r\n        currency: \"CNY\",\r\n        method: \"wechat\",\r\n        message: \"支付成功\"\r\n      };\r\n    } catch (error) {\r\n      console.error(\"微信支付处理失败:\", error);\r\n      return {\r\n        success: false,\r\n        orderId: paymentData.order_id,\r\n        amount: paymentData.amount,\r\n        currency: \"CNY\",\r\n        method: \"wechat\",\r\n        message: error instanceof Error ? error.message : \"支付处理失败\"\r\n      };\r\n    }\r\n  }\r\n\r\n  // 根据支付方式处理支付\r\n  static async processPayment(paymentData: PaymentData, method: string): Promise<PaymentResult> {\r\n    switch (method) {\r\n      case \"stripe\":\r\n        return await this.processStripePayment(paymentData);\r\n      case \"alipay\":\r\n        return await this.processAlipayPayment(paymentData);\r\n      case \"wechat\":\r\n        return await this.processWechatPayment(paymentData);\r\n      default:\r\n        return {\r\n          success: false,\r\n          orderId: paymentData.order_id,\r\n          amount: paymentData.amount,\r\n          currency: \"CNY\",\r\n          method: method,\r\n          message: \"不支持的支付方式\"\r\n        };\r\n    }\r\n  }\r\n}"],"names":["PAYMENT_CONFIG","publicKey","secretKey","appId","privateKey","alipayPublicKey","mchId","apiKey","PaymentService","processStripePayment","paymentData","Error","console","log","Promise","resolve","setTimeout","success","paymentId","Date","now","orderId","order_id","amount","currency","method","message","error","processAlipayPayment","processWechatPayment","processPayment","this"],"mappings":"AAGA,MAAMA,EAEI,CACNC,UAAqD,GACrDC,UAAqD,IAJnDF,EAOI,CACNG,MAA6C,GAC7CC,WAAuD,GACvDC,gBAA2D,IAVzDL,EAaI,CACNG,MAA6C,GAC7CG,MAA6C,GAC7CC,OAA+C,IAgB5C,MAAMC,eAEX,iCAAaC,CAAqBC,GAChC,IAEE,IAAKV,EAAsBC,YAAcD,EAAsBE,UAC7D,MAAM,IAAIS,MAAM,gBAWlB,OANAC,QAAQC,IAAI,cAAeH,SAGrB,IAAII,QAAQC,GAAWC,WAAWD,EAAS,MAG1C,CACLE,SAAS,EACTC,UAAW,UAAUC,KAAKC,QAC1BC,QAASX,EAAYY,SACrBC,OAAQb,EAAYa,OACpBC,SAAU,MACVC,OAAQ,SACRC,QAAS,OAEb,OAASC,GAEP,OADAf,QAAQe,MAAM,gBAAiBA,GACxB,CACLV,SAAS,EACTI,QAASX,EAAYY,SACrBC,OAAQb,EAAYa,OACpBC,SAAU,MACVC,OAAQ,SACRC,QAASC,aAAiBhB,MAAQgB,EAAMD,QAAU,SAEtD,CACF,CAGA,iCAAaE,CAAqBlB,GAChC,IAEE,IAAKV,EAAsBG,QAAUH,EAAsBI,WACzD,MAAM,IAAIO,MAAM,aAWlB,OANAC,QAAQC,IAAI,WAAYH,SAGlB,IAAII,QAAQC,GAAWC,WAAWD,EAAS,MAG1C,CACLE,SAAS,EACTC,UAAW,UAAUC,KAAKC,QAC1BC,QAASX,EAAYY,SACrBC,OAAQb,EAAYa,OACpBC,SAAU,MACVC,OAAQ,SACRC,QAAS,OAEb,OAASC,GAEP,OADAf,QAAQe,MAAM,aAAcA,GACrB,CACLV,SAAS,EACTI,QAASX,EAAYY,SACrBC,OAAQb,EAAYa,OACpBC,SAAU,MACVC,OAAQ,SACRC,QAASC,aAAiBhB,MAAQgB,EAAMD,QAAU,SAEtD,CACF,CAGA,iCAAaG,CAAqBnB,GAChC,IAEE,IAAKV,EAAsBG,QAAUH,EAAsBM,QAAUN,EAAsBO,OACzF,MAAM,IAAII,MAAM,YAWlB,OANAC,QAAQC,IAAI,UAAWH,SAGjB,IAAII,QAAQC,GAAWC,WAAWD,EAAS,MAG1C,CACLE,SAAS,EACTC,UAAW,UAAUC,KAAKC,QAC1BC,QAASX,EAAYY,SACrBC,OAAQb,EAAYa,OACpBC,SAAU,MACVC,OAAQ,SACRC,QAAS,OAEb,OAASC,GAEP,OADAf,QAAQe,MAAM,YAAaA,GACpB,CACLV,SAAS,EACTI,QAASX,EAAYY,SACrBC,OAAQb,EAAYa,OACpBC,SAAU,MACVC,OAAQ,SACRC,QAASC,aAAiBhB,MAAQgB,EAAMD,QAAU,SAEtD,CACF,CAGA,2BAAaI,CAAepB,EAA0Be,GACpD,OAAQA,GACN,IAAK,SACH,aAAaM,KAAKtB,qBAAqBC,GACzC,IAAK,SACH,aAAaqB,KAAKH,qBAAqBlB,GACzC,IAAK,SACH,aAAaqB,KAAKF,qBAAqBnB,GACzC,QACE,MAAO,CACLO,SAAS,EACTI,QAASX,EAAYY,SACrBC,OAAQb,EAAYa,OACpBC,SAAU,MACVC,SACAC,QAAS,YAGjB"}