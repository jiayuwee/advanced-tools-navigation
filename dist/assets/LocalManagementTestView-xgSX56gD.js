import{d as e,r as t,c as s,o as a,aN as r,aO as n,R as o,U as c,t as l,v as i,E as u,F as d,B as m,J as p,x as g,y as f,I as y}from"./vendor-BUZxw6e1.js";import{u as v,L as w}from"./localManagement-DWH7U7jI.js";import{_ as h}from"./index-BxdVNC7e.js";const T={class:"local-management-test"},b={class:"test-results"},k={class:"test-summary"},I={class:"summary-item"},C={class:"value"},L={class:"summary-item"},E={class:"value success"},S={class:"summary-item"},D={class:"value error"},O={class:"test-list"},U={class:"test-info"},R={class:"test-name"},j={class:"test-description"},_={class:"test-status"},P={key:0,class:"test-error"};const x=h(e({__name:"LocalManagementTestView",setup(e,{expose:l}){l();const i=v(),u=t([]),d=t(!1),m=s(()=>u.value.length),p=s(()=>u.value.filter(e=>"passed"===e.status).length),g=s(()=>u.value.filter(e=>"failed"===e.status).length),f=[{name:"本地存储服务初始化",description:"测试本地存储服务是否正确初始化",test:async()=>{const e=w.getUserPreferences();if(!e||"object"!=typeof e)throw new Error("用户偏好设置初始化失败");return!0}},{name:"添加本地工具",description:"测试添加本地工具功能",test:async()=>{const e=i.addLocalTool({name:"测试工具",description:"这是一个测试工具",url:"https://test.com",icon:"🧪",categoryId:"test-category",tags:["test"],isFeatured:!1,clickCount:0});if(!e||!e.localId)throw new Error("添加本地工具失败");return!0}},{name:"更新本地工具",description:"测试更新本地工具功能",test:async()=>{const e=w.getLocalTools();if(0===e.length)throw new Error("没有可更新的工具");const t=e[0];if(!i.updateLocalTool(t.id||t.localId,{name:"更新后的工具名称"}))throw new Error("更新本地工具失败");return!0}},{name:"删除本地工具",description:"测试删除本地工具功能",test:async()=>{const e=w.getLocalTools();if(0===e.length)throw new Error("没有可删除的工具");const t=e[0];if(!i.deleteLocalTool(t.id||t.localId))throw new Error("删除本地工具失败");return!0}},{name:"用户偏好设置",description:"测试用户偏好设置的保存和读取",test:async()=>{const e=w.getUserPreferences();i.updateUserPreferences({theme:"dark",autoSync:!1});const t=w.getUserPreferences();if("dark"!==t.theme||!1!==t.autoSync)throw new Error("用户偏好设置更新失败");return i.updateUserPreferences(e),!0}},{name:"离线队列管理",description:"测试离线操作队列的管理",test:async()=>{const e=w.getOfflineQueue().length;i.addLocalTool({name:"队列测试工具",description:"测试离线队列",url:"https://queue-test.com",icon:"📋",categoryId:"test",tags:[],isFeatured:!1,clickCount:0});if(w.getOfflineQueue().length<=e)throw new Error("离线队列未正确更新");return!0}},{name:"存储使用情况",description:"测试存储使用情况的计算",test:async()=>{const e=w.getStorageInfo();if(!e||"number"!=typeof e.used||"number"!=typeof e.total)throw new Error("存储使用情况计算失败");if(e.percentage<0||e.percentage>100)throw new Error("存储使用百分比计算错误");return!0}},{name:"数据导出功能",description:"测试本地数据导出功能",test:async()=>{try{const e={tools:w.getLocalTools(),categories:w.getLocalCategories(),preferences:w.getUserPreferences(),exportTime:(new Date).toISOString()},t=JSON.stringify(e,null,2);if(!t||t.length<10)throw new Error("导出数据为空或格式错误");return!0}catch(e){throw new Error(`数据导出失败: ${e}`)}}}],y=()=>{u.value=f.map(e=>({name:e.name,description:e.description,status:"pending"}))};a(()=>{y()});const h={localStore:i,testResults:u,isRunning:d,totalTests:m,passedTests:p,failedTests:g,testCases:f,initializeTests:y,runAllTests:async()=>{if(!d.value){d.value=!0;for(let t=0;t<f.length;t++){const s=f[t],a=u.value[t];a.status="running",a.error=void 0;const r=Date.now();try{await s.test(),a.status="passed",a.duration=Date.now()-r}catch(e){a.status="failed",a.error=e instanceof Error?e.message:String(e),a.duration=Date.now()-r}await new Promise(e=>setTimeout(e,100))}d.value=!1}},clearTestData:()=>{confirm("确定要清空所有测试数据吗？")&&(w.clearAllLocalData(),i.initialize(),alert("测试数据已清空"))},generateTestData:()=>{for(let e=1;e<=3;e++)i.addLocalTool({name:`测试工具 ${e}`,description:`这是第 ${e} 个测试工具`,url:`https://test-tool-${e}.com`,icon:"🔧",categoryId:"test-category",tags:["test",`tool${e}`],isFeatured:1===e,clickCount:Math.floor(100*Math.random())});alert("测试数据已生成")},exportTestResults:()=>{const e={summary:{total:m.value,passed:p.value,failed:g.value,timestamp:(new Date).toISOString()},tests:u.value},t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),s=URL.createObjectURL(t),a=document.createElement("a");a.href=s,a.download=`test-results-${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(s)},get CheckCircleIcon(){return c},get XCircleIcon(){return o},get LoaderIcon(){return n},get CircleIcon(){return r}};return Object.defineProperty(h,"__isScriptSetup",{enumerable:!1,value:!0}),h}}),[["render",function(e,t,s,a,r,n){return y(),l("div",T,[i("div",{class:"test-header"},[t[0]||(t[0]=i("h2",null,"本地管理功能测试",-1)),i("button",{class:"btn primary",onClick:a.runAllTests},"运行所有测试")]),i("div",b,[i("div",k,[i("div",I,[t[1]||(t[1]=i("span",{class:"label"},"总测试数:",-1)),i("span",C,u(a.totalTests),1)]),i("div",L,[t[2]||(t[2]=i("span",{class:"label"},"通过:",-1)),i("span",E,u(a.passedTests),1)]),i("div",S,[t[3]||(t[3]=i("span",{class:"label"},"失败:",-1)),i("span",D,u(a.failedTests),1)])]),i("div",O,[(y(!0),l(d,null,m(a.testResults,e=>(y(),l("div",{key:e.name,class:p(["test-item",{success:"passed"===e.status,error:"failed"===e.status,running:"running"===e.status}])},[i("div",U,[i("div",R,u(e.name),1),i("div",j,u(e.description),1)]),i("div",_,["passed"===e.status?(y(),f(a.CheckCircleIcon,{key:0,class:"icon success"})):"failed"===e.status?(y(),f(a.XCircleIcon,{key:1,class:"icon error"})):"running"===e.status?(y(),f(a.LoaderIcon,{key:2,class:"icon spinning"})):(y(),f(a.CircleIcon,{key:3,class:"icon pending"}))]),e.error?(y(),l("div",P,u(e.error),1)):g("",!0)],2))),128))])]),i("div",{class:"test-actions"},[i("button",{class:"btn secondary",onClick:a.clearTestData},"清空测试数据"),i("button",{class:"btn secondary",onClick:a.generateTestData},"生成测试数据"),i("button",{class:"btn secondary",onClick:a.exportTestResults},"导出测试结果")])])}],["__scopeId","data-v-38abe91c"],["__file","/mnt/persist/workspace/src/views/admin/LocalManagementTestView.vue"]]);export{x as default};
