{"version":3,"file":"AdminView-1pOB6JRI.js","sources":["../../node_modules/lucide-vue-next/dist/esm/icons/bar-chart-3.js","../../src/services/userService.ts","../../src/services/authService.ts","../../src/views/AdminView.vue"],"sourcesContent":["/**\n * @license lucide-vue-next v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst BarChart3 = createLucideIcon(\"BarChart3Icon\", [\n  [\"path\", { d: \"M3 3v18h18\", key: \"1s2lah\" }],\n  [\"path\", { d: \"M18 17V9\", key: \"2bz60n\" }],\n  [\"path\", { d: \"M13 17V5\", key: \"1frdt8\" }],\n  [\"path\", { d: \"M8 17v-3\", key: \"17ska0\" }]\n]);\n\nexport { BarChart3 as default };\n//# sourceMappingURL=bar-chart-3.js.map\n","import { supabase } from \"../lib/supabaseClient\";\r\nimport type { User, ProfileForm } from \"../types\";\r\nimport type { Database } from \"../types/database\";\r\n\r\ntype UserProfileRow = Database[\"public\"][\"Tables\"][\"user_profiles\"][\"Row\"];\r\ntype UserProfileInsert =\r\n  Database[\"public\"][\"Tables\"][\"user_profiles\"][\"Insert\"];\r\ntype UserProfileUpdate =\r\n  Database[\"public\"][\"Tables\"][\"user_profiles\"][\"Update\"];\r\n\r\nexport class UserService {\r\n  // 获取当前用户信息\r\n  static async getCurrentUser(): Promise<User | null> {\r\n    try {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser();\r\n\r\n      if (!user) return null;\r\n\r\n      const { data: profile, error } = await supabase\r\n        .from(\"user_profiles\")\r\n        .select(\"*\")\r\n        .eq(\"id\", user.id)\r\n        .single();\r\n\r\n      if (error) {\r\n        // 如果用户资料不存在，创建一个\r\n        if (error.code === \"PGRST116\") {\r\n          return this.createUserProfile(user.id, user.email!);\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return this.transformUser(profile);\r\n    } catch (error) {\r\n      console.error(\"获取用户信息失败:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // 获取用户资料\r\n  static async getUserProfile(userId: string): Promise<User | null> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"user_profiles\")\r\n        .select(\"*\")\r\n        .eq(\"id\", userId)\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      if (!data) return null;\r\n\r\n      return this.transformUser(data);\r\n    } catch (error) {\r\n      console.error(\"获取用户资料失败:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // 更新用户资料\r\n  static async updateProfile(\r\n    userId: string,\r\n    profileData: ProfileForm,\r\n  ): Promise<User> {\r\n    try {\r\n      const updateData: UserProfileUpdate = {\r\n        full_name: profileData.full_name,\r\n        username: profileData.username,\r\n        bio: profileData.bio,\r\n        website: profileData.website,\r\n        location: profileData.location,\r\n        updated_at: new Date().toISOString(),\r\n      };\r\n\r\n      // 如果有头像文件，先上传\r\n      if (profileData.avatar) {\r\n        const avatarUrl = await this.uploadAvatar(userId, profileData.avatar);\r\n        updateData.avatar_url = avatarUrl;\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from(\"user_profiles\")\r\n        .update(updateData)\r\n        .eq(\"id\", userId)\r\n        .select(\"*\")\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      if (!data) throw new Error(\"更新用户资料失败\");\r\n\r\n      return this.transformUser(data);\r\n    } catch (error) {\r\n      console.error(\"更新用户资料失败:\", error);\r\n      throw new Error(\"更新用户资料失败\");\r\n    }\r\n  }\r\n\r\n  // 创建用户资料\r\n  static async createUserProfile(userId: string, email: string): Promise<User> {\r\n    try {\r\n      const profileData: UserProfileInsert = {\r\n        id: userId,\r\n        email,\r\n        role: \"user\",\r\n        is_active: true,\r\n        email_verified: false,\r\n      };\r\n\r\n      const { data, error } = await supabase\r\n        .from(\"user_profiles\")\r\n        .insert(profileData)\r\n        .select(\"*\")\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      if (!data) throw new Error(\"创建用户资料失败\");\r\n\r\n      return this.transformUser(data);\r\n    } catch (error) {\r\n      console.error(\"创建用户资料失败:\", error);\r\n      throw new Error(\"创建用户资料失败\");\r\n    }\r\n  }\r\n\r\n  // 上传头像\r\n  static async uploadAvatar(userId: string, file: File): Promise<string> {\r\n    try {\r\n      const fileExt = file.name.split(\".\").pop();\r\n      const fileName = `${userId}-${Date.now()}.${fileExt}`;\r\n      const filePath = `avatars/${fileName}`;\r\n\r\n      // 删除旧头像\r\n      const { data: oldFiles } = await supabase.storage\r\n        .from(\"avatars\")\r\n        .list(\"\", {\r\n          search: userId,\r\n        });\r\n\r\n      if (oldFiles && oldFiles.length > 0) {\r\n        const filesToRemove = oldFiles.map((file) => file.name);\r\n        await supabase.storage.from(\"avatars\").remove(filesToRemove);\r\n      }\r\n\r\n      // 上传新头像\r\n      const { error: uploadError } = await supabase.storage\r\n        .from(\"avatars\")\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      const { data } = supabase.storage.from(\"avatars\").getPublicUrl(filePath);\r\n\r\n      return data.publicUrl;\r\n    } catch (error) {\r\n      console.error(\"上传头像失败:\", error);\r\n      throw new Error(\"上传头像失败\");\r\n    }\r\n  }\r\n\r\n  // 更新最后登录时间\r\n  static async updateLastLogin(userId: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase\r\n        .from(\"user_profiles\")\r\n        .update({ last_login_at: new Date().toISOString() })\r\n        .eq(\"id\", userId);\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"更新最后登录时间失败:\", error);\r\n    }\r\n  }\r\n\r\n  // 检查用户名是否可用\r\n  static async checkUsernameAvailability(\r\n    username: string,\r\n    excludeUserId?: string,\r\n  ): Promise<boolean> {\r\n    try {\r\n      let query = supabase\r\n        .from(\"user_profiles\")\r\n        .select(\"id\")\r\n        .eq(\"username\", username);\r\n\r\n      if (excludeUserId) {\r\n        query = query.neq(\"id\", excludeUserId);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) throw error;\r\n\r\n      return !data || data.length === 0;\r\n    } catch (error) {\r\n      console.error(\"检查用户名可用性失败:\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // 获取用户统计信息\r\n  static async getUserStats(userId: string): Promise<{\r\n    favoriteToolsCount: number;\r\n    favoriteProductsCount: number;\r\n    ordersCount: number;\r\n    totalSpent: number;\r\n  }> {\r\n    try {\r\n      const [favoritesResult, ordersResult] = await Promise.all([\r\n        supabase\r\n          .from(\"favorites\")\r\n          .select(\"tool_id, product_id\")\r\n          .eq(\"user_id\", userId),\r\n        supabase\r\n          .from(\"orders\")\r\n          .select(\"total_amount, status\")\r\n          .eq(\"user_id\", userId),\r\n      ]);\r\n\r\n      const favorites = favoritesResult.data || [];\r\n      const orders = ordersResult.data || [];\r\n\r\n      const favoriteToolsCount = favorites.filter((f) => f.tool_id).length;\r\n      const favoriteProductsCount = favorites.filter(\r\n        (f) => f.product_id,\r\n      ).length;\r\n      const ordersCount = orders.length;\r\n      const totalSpent = orders\r\n        .filter((order) => order.status === \"paid\")\r\n        .reduce((sum, order) => sum + order.total_amount, 0);\r\n\r\n      return {\r\n        favoriteToolsCount,\r\n        favoriteProductsCount,\r\n        ordersCount,\r\n        totalSpent,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"获取用户统计信息失败:\", error);\r\n      return {\r\n        favoriteToolsCount: 0,\r\n        favoriteProductsCount: 0,\r\n        ordersCount: 0,\r\n        totalSpent: 0,\r\n      };\r\n    }\r\n  }\r\n\r\n  // 删除用户账户\r\n  static async deleteAccount(userId: string): Promise<void> {\r\n    try {\r\n      // 删除用户相关数据\r\n      await Promise.all([\r\n        supabase.from(\"favorites\").delete().eq(\"user_id\", userId),\r\n        supabase.from(\"orders\").delete().eq(\"user_id\", userId),\r\n        supabase.from(\"user_profiles\").delete().eq(\"id\", userId),\r\n      ]);\r\n\r\n      // 删除用户认证账户\r\n      const { error } = await supabase.auth.admin.deleteUser(userId);\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"删除用户账户失败:\", error);\r\n      throw new Error(\"删除用户账户失败\");\r\n    }\r\n  }\r\n\r\n  // 转换数据库行为业务对象\r\n  private static transformUser(row: UserProfileRow): User {\r\n    return {\r\n      id: row.id,\r\n      email: row.email,\r\n      username: row.username,\r\n      full_name: row.full_name,\r\n      avatar_url: row.avatar_url,\r\n      bio: row.bio,\r\n      website: row.website,\r\n      location: row.location,\r\n      role: row.role,\r\n      is_active: row.is_active,\r\n      email_verified: row.email_verified,\r\n      created_at: row.created_at,\r\n      updated_at: row.updated_at,\r\n      last_login_at: row.last_login_at,\r\n    };\r\n  }\r\n}\r\n","import { supabase } from \"../lib/supabaseClient\";\r\nimport { UserService } from \"./userService\";\r\nimport { ErrorHandler } from \"../utils/errorHandler\";\r\nimport type { User, LoginForm, RegisterForm } from \"../types\";\r\n\r\nexport class AuthService {\r\n  // 登录\r\n  static async login(\r\n    credentials: LoginForm,\r\n  ): Promise<{ user: User; session: any }> {\r\n    try {\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n      });\r\n\r\n      if (error) throw error;\r\n      if (!data.user) throw new Error(\"登录失败\");\r\n\r\n      // 更新最后登录时间\r\n      await UserService.updateLastLogin(data.user.id);\r\n\r\n      // 获取用户资料\r\n      const userProfile = await UserService.getCurrentUser();\r\n      if (!userProfile) throw new Error(\"获取用户信息失败\");\r\n\r\n      return {\r\n        user: userProfile,\r\n        session: data.session,\r\n      };\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"AuthService.login\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  // 注册\r\n  static async register(\r\n    userData: RegisterForm,\r\n  ): Promise<{ user: User; session: any }> {\r\n    try {\r\n      // 检查用户名是否可用\r\n      if (userData.username) {\r\n        const isUsernameAvailable = await UserService.checkUsernameAvailability(\r\n          userData.username,\r\n        );\r\n        if (!isUsernameAvailable) {\r\n          throw new Error(\"用户名已被使用\");\r\n        }\r\n      }\r\n\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email: userData.email,\r\n        password: userData.password,\r\n        options: {\r\n          data: {\r\n            full_name: userData.full_name,\r\n            username: userData.username,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (error) throw error;\r\n      if (!data.user) throw new Error(\"注册失败\");\r\n\r\n      // 创建用户资料\r\n      const userProfile = await UserService.createUserProfile(\r\n        data.user.id,\r\n        userData.email,\r\n      );\r\n\r\n      // 如果有额外信息，更新用户资料\r\n      if (userData.full_name || userData.username) {\r\n        const updatedProfile = await UserService.updateProfile(data.user.id, {\r\n          full_name: userData.full_name,\r\n          username: userData.username,\r\n        });\r\n\r\n        return {\r\n          user: updatedProfile,\r\n          session: data.session,\r\n        };\r\n      }\r\n\r\n      return {\r\n        user: userProfile,\r\n        session: data.session,\r\n      };\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"AuthService.register\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  // 登出\r\n  static async logout(): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"AuthService.logout\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  // 忘记密码\r\n  static async forgotPassword(email: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${window.location.origin}/auth/reset-password`,\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"AuthService.forgotPassword\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  // 重置密码\r\n  static async resetPassword(newPassword: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.updateUser({\r\n        password: newPassword,\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      const appError = ErrorHandler.handleApiError(error);\r\n      ErrorHandler.logError(appError, \"AuthService.resetPassword\");\r\n      throw appError;\r\n    }\r\n  }\r\n\r\n  // 更改密码\r\n  static async changePassword(newPassword: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.updateUser({\r\n        password: newPassword,\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"更改密码失败:\", error);\r\n      throw new Error(\"更改密码失败\");\r\n    }\r\n  }\r\n\r\n  // 更新邮箱\r\n  static async updateEmail(newEmail: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.updateUser({\r\n        email: newEmail,\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"更新邮箱失败:\", error);\r\n      throw new Error(\"更新邮箱失败\");\r\n    }\r\n  }\r\n\r\n  // 验证邮箱\r\n  static async verifyEmail(token: string, type: string): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.verifyOtp({\r\n        token_hash: token,\r\n        type: type as any,\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"验证邮箱失败:\", error);\r\n      throw new Error(\"验证邮箱失败\");\r\n    }\r\n  }\r\n\r\n  // 重新发送验证邮件\r\n  static async resendVerificationEmail(): Promise<void> {\r\n    try {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser();\r\n      if (!user) throw new Error(\"用户未登录\");\r\n\r\n      const { error } = await supabase.auth.resend({\r\n        type: \"signup\",\r\n        email: user.email!,\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"重新发送验证邮件失败:\", error);\r\n      throw new Error(\"重新发送验证邮件失败\");\r\n    }\r\n  }\r\n\r\n  // 获取当前会话\r\n  static async getSession(): Promise<any> {\r\n    try {\r\n      const {\r\n        data: { session },\r\n      } = await supabase.auth.getSession();\r\n      return session;\r\n    } catch (error) {\r\n      console.error(\"获取会话失败:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // 刷新会话\r\n  static async refreshSession(): Promise<any> {\r\n    try {\r\n      const { data, error } = await supabase.auth.refreshSession();\r\n      if (error) throw error;\r\n      return data.session;\r\n    } catch (error) {\r\n      console.error(\"刷新会话失败:\", error);\r\n      throw new Error(\"刷新会话失败\");\r\n    }\r\n  }\r\n\r\n  // 检查用户是否已登录\r\n  static async isAuthenticated(): Promise<boolean> {\r\n    try {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser();\r\n      return !!user;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // 监听认证状态变化\r\n  static onAuthStateChange(callback: (event: string, session: any) => void) {\r\n    return supabase.auth.onAuthStateChange(callback);\r\n  }\r\n\r\n  // 第三方登录 - Google\r\n  static async signInWithGoogle(): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.signInWithOAuth({\r\n        provider: \"google\",\r\n        options: {\r\n          redirectTo: `${window.location.origin}/auth/callback`,\r\n        },\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"Google 登录失败:\", error);\r\n      throw new Error(\"Google 登录失败\");\r\n    }\r\n  }\r\n\r\n  // 第三方登录 - GitHub\r\n  static async signInWithGitHub(): Promise<void> {\r\n    try {\r\n      const { error } = await supabase.auth.signInWithOAuth({\r\n        provider: \"github\",\r\n        options: {\r\n          redirectTo: `${window.location.origin}/auth/callback`,\r\n        },\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error(\"GitHub 登录失败:\", error);\r\n      throw new Error(\"GitHub 登录失败\");\r\n    }\r\n  }\r\n\r\n  // 删除账户\r\n  static async deleteAccount(): Promise<void> {\r\n    try {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser();\r\n      if (!user) throw new Error(\"用户未登录\");\r\n\r\n      await UserService.deleteAccount(user.id);\r\n    } catch (error) {\r\n      console.error(\"删除账户失败:\", error);\r\n      throw new Error(\"删除账户失败\");\r\n    }\r\n  }\r\n}\r\n","<template>\r\n  <div class=\"admin-view\">\r\n    <div class=\"admin-header\">\r\n      <div class=\"container\">\r\n        <h1>管理后台</h1>\r\n        <p>系统管理和数据统计</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"admin-content\">\r\n      <div class=\"container\">\r\n        <div class=\"admin-layout\">\r\n          <!-- 侧边导航 -->\r\n          <nav class=\"admin-nav\">\r\n            <router-link\r\n              to=\"/admin/dashboard\"\r\n              class=\"nav-item\"\r\n              active-class=\"active\"\r\n            >\r\n              <BarChart3Icon class=\"nav-icon\" />\r\n              仪表盘\r\n            </router-link>\r\n            <router-link\r\n              to=\"/admin/tools\"\r\n              class=\"nav-item\"\r\n              active-class=\"active\"\r\n            >\r\n              <WrenchIcon class=\"nav-icon\" />\r\n              工具管理\r\n            </router-link>\r\n            <router-link\r\n              to=\"/admin/products\"\r\n              class=\"nav-item\"\r\n              active-class=\"active\"\r\n            >\r\n              <ShoppingBagIcon class=\"nav-icon\" />\r\n              产品管理\r\n            </router-link>\r\n            <router-link\r\n              to=\"/admin/users\"\r\n              class=\"nav-item\"\r\n              active-class=\"active\"\r\n            >\r\n              <UsersIcon class=\"nav-icon\" />\r\n              用户管理\r\n            </router-link>\r\n            <router-link\r\n              to=\"/admin/orders\"\r\n              class=\"nav-item\"\r\n              active-class=\"active\"\r\n            >\r\n              <FileTextIcon class=\"nav-icon\" />\r\n              订单管理\r\n            </router-link>\r\n            <router-link\r\n              to=\"/admin/local\"\r\n              class=\"nav-item\"\r\n              active-class=\"active\"\r\n            >\r\n              <HardDriveIcon class=\"nav-icon\" />\r\n              本地管理\r\n            </router-link>\r\n            <router-link\r\n              to=\"/admin/settings\"\r\n              class=\"nav-item\"\r\n              active-class=\"active\"\r\n            >\r\n              <SettingsIcon class=\"nav-icon\" />\r\n              系统设置\r\n            </router-link>\r\n            <div class=\"nav-divider\"></div>\r\n            <router-link to=\"/\" class=\"nav-item\">\r\n              <HomeIcon class=\"nav-icon\" />\r\n              返回首页\r\n            </router-link>\r\n            <button class=\"nav-item logout-btn\" @click=\"handleLogout\">\r\n              <LogOutIcon class=\"nav-icon\" />\r\n              退出登录\r\n            </button>\r\n          </nav>\r\n\r\n          <!-- 主要内容区域 -->\r\n          <main class=\"admin-main\">\r\n            <router-view />\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {\r\n  BarChart3Icon,\r\n  WrenchIcon,\r\n  ShoppingBagIcon,\r\n  UsersIcon,\r\n  FileTextIcon,\r\n  HardDriveIcon,\r\n  SettingsIcon,\r\n  HomeIcon,\r\n  LogOutIcon,\r\n} from \"lucide-vue-next\";\r\nimport { AuthService } from \"../services/authService\";\r\nimport { UserService } from \"../services/userService\";\r\n\r\nconst router = useRouter();\r\n\r\n// 方法\r\nconst checkAdminAccess = async () => {\r\n  try {\r\n    const user = await UserService.getCurrentUser();\r\n    if (!user || (user.role !== \"admin\" && user.role !== \"super_admin\")) {\r\n      console.warn(\"管理员权限检查失败，重定向到首页\");\r\n      router.push(\"/\");\r\n      return;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"检查管理员权限失败:\", error);\r\n    router.push(\"/auth/login\");\r\n  }\r\n};\r\n\r\nconst handleLogout = async () => {\r\n  try {\r\n    await AuthService.logout();\r\n    router.push(\"/\");\r\n  } catch (error) {\r\n    console.error(\"退出登录失败:\", error);\r\n  }\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  checkAdminAccess();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.admin-view {\r\n  min-height: 100vh;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.admin-header {\r\n  background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);\r\n  color: white;\r\n  padding: 2rem 0;\r\n}\r\n\r\n.container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 0 1rem;\r\n}\r\n\r\n.admin-header h1 {\r\n  font-size: 2.5rem;\r\n  font-weight: 700;\r\n  margin: 0 0 0.5rem 0;\r\n  text-align: center;\r\n}\r\n\r\n.admin-header p {\r\n  font-size: 1.125rem;\r\n  margin: 0;\r\n  text-align: center;\r\n  opacity: 0.9;\r\n}\r\n\r\n.admin-content {\r\n  padding: 2rem 0;\r\n}\r\n\r\n.admin-layout {\r\n  display: grid;\r\n  grid-template-columns: 250px 1fr;\r\n  gap: 2rem;\r\n}\r\n\r\n.admin-nav {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 1rem;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  height: fit-content;\r\n  position: sticky;\r\n  top: 2rem;\r\n}\r\n\r\n.nav-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  color: #605e5c;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n  border: none;\r\n  background: none;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.nav-item:hover {\r\n  background: #f3f2f1;\r\n  color: #323130;\r\n}\r\n\r\n.nav-item.active {\r\n  background: #dc2626;\r\n  color: white;\r\n}\r\n\r\n.nav-divider {\r\n  height: 1px;\r\n  background: #e1dfdd;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.nav-item.logout-btn {\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.nav-item.logout-btn:hover {\r\n  background: #fef2f2;\r\n  color: #dc2626;\r\n}\r\n\r\n.nav-icon {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.admin-main {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  min-height: 600px;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .admin-header {\r\n    padding: 1.5rem 0;\r\n  }\r\n\r\n  .admin-header h1 {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .admin-layout {\r\n    grid-template-columns: 1fr;\r\n    gap: 1rem;\r\n  }\r\n\r\n  .admin-nav {\r\n    position: static;\r\n    order: 2;\r\n    display: flex;\r\n    overflow-x: auto;\r\n    padding: 1rem;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .nav-item {\r\n    white-space: nowrap;\r\n    margin-bottom: 0;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  .nav-divider {\r\n    display: none;\r\n  }\r\n\r\n  .admin-main {\r\n    order: 1;\r\n    padding: 1.5rem;\r\n  }\r\n}\r\n</style>\r\n"],"names":["BarChart3","createLucideIcon","d","key","UserService","getCurrentUser","data","user","supabase","auth","getUser","profile","error","from","select","eq","id","single","code","this","createUserProfile","email","transformUser","console","getUserProfile","userId","updateProfile","profileData","updateData","full_name","username","bio","website","location","updated_at","Date","toISOString","avatar","avatarUrl","uploadAvatar","avatar_url","update","Error","role","is_active","email_verified","insert","file","fileExt","name","split","pop","filePath","now","oldFiles","storage","list","search","length","filesToRemove","map","remove","uploadError","upload","getPublicUrl","publicUrl","updateLastLogin","last_login_at","checkUsernameAvailability","excludeUserId","query","neq","getUserStats","favoritesResult","ordersResult","Promise","all","favorites","orders","favoriteToolsCount","filter","f","tool_id","favoriteProductsCount","product_id","ordersCount","totalSpent","order","status","reduce","sum","total_amount","deleteAccount","delete","admin","deleteUser","row","created_at","AuthService","login","credentials","signInWithPassword","password","userProfile","session","appError","ErrorHandler","handleApiError","logError","register","userData","signUp","options","logout","signOut","forgotPassword","resetPasswordForEmail","redirectTo","window","origin","resetPassword","newPassword","updateUser","changePassword","updateEmail","newEmail","verifyEmail","token","type","verifyOtp","token_hash","resendVerificationEmail","resend","getSession","refreshSession","isAuthenticated","onAuthStateChange","callback","signInWithGoogle","signInWithOAuth","provider","signInWithGitHub","router","useRouter","handleLogout","async","push","onMounted","warn","checkAdminAccess","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_router_link","to","_unref","BarChart3Icon","WrenchIcon","ShoppingBagIcon","UsersIcon","FileTextIcon","HardDriveIcon","SettingsIcon","HomeIcon","onClick","LogOutIcon","_hoisted_6","_component_router_view"],"mappings":"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","x_google_ignoreList":[0]}